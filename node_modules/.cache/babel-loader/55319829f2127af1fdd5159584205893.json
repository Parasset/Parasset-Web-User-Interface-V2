{"ast":null,"code":"//@ts-nocheck\nimport { createReducer } from '@reduxjs/toolkit';\nimport { toggleSettingsMenu, updateBlockNumber, toggleWalletModal1, updateTransactionHash, toggleStatus } from './actions';\nconst initialState = {\n  blockNumber: {},\n  walletModalOpen1: false,\n  status: 1,\n  settingsMenuOpen: false,\n  transactionHash: ''\n};\nexport default createReducer(initialState, builder => builder.addCase(updateBlockNumber, (state, action) => {\n  const {\n    chainId,\n    blockNumber\n  } = action.payload;\n\n  if (typeof state.blockNumber[chainId] !== 'number') {\n    state.blockNumber[chainId] = blockNumber;\n  } else {\n    state.blockNumber[chainId] = Math.max(blockNumber, state.blockNumber[chainId]);\n  }\n}).addCase(toggleSettingsMenu, state => {\n  state.settingsMenuOpen = !state.settingsMenuOpen;\n}).addCase(toggleWalletModal1, (state, action) => {\n  state.walletModalOpen1 = action.payload.walletModalOpen1 !== undefined ? action.payload.walletModalOpen1 : !state.walletModalOpen1;\n}).addCase(toggleStatus, (state, action) => {\n  state.status = action.payload.status !== undefined ? action.payload.status : 1;\n}).addCase(updateTransactionHash, (state, action) => {\n  state.transactionHash = action.payload.transactionHash !== undefined ? action.payload.transactionHash : '';\n}));","map":{"version":3,"sources":["/Users/miczero/ParaAsset/src/state/application/reducer.ts"],"names":["createReducer","toggleSettingsMenu","updateBlockNumber","toggleWalletModal1","updateTransactionHash","toggleStatus","initialState","blockNumber","walletModalOpen1","status","settingsMenuOpen","transactionHash","builder","addCase","state","action","chainId","payload","Math","max","undefined"],"mappings":"AAAA;AACA,SAASA,aAAT,QAAsC,kBAAtC;AACA,SAIEC,kBAJF,EAKEC,iBALF,EAMEC,kBANF,EAOEC,qBAPF,EAQEC,YARF,QASO,WATP;AAkBA,MAAMC,YAA8B,GAAG;AACrCC,EAAAA,WAAW,EAAE,EADwB;AAErCC,EAAAA,gBAAgB,EAAE,KAFmB;AAGrCC,EAAAA,MAAM,EAAE,CAH6B;AAIrCC,EAAAA,gBAAgB,EAAE,KAJmB;AAKrCC,EAAAA,eAAe,EAAC;AALqB,CAAvC;AAQA,eAAeX,aAAa,CAACM,YAAD,EAAeM,OAAO,IAChDA,OAAO,CACJC,OADH,CACWX,iBADX,EAC8B,CAACY,KAAD,EAAQC,MAAR,KAAmB;AAC7C,QAAM;AAAEC,IAAAA,OAAF;AAAWT,IAAAA;AAAX,MAA2BQ,MAAM,CAACE,OAAxC;;AACA,MAAI,OAAOH,KAAK,CAACP,WAAN,CAAkBS,OAAlB,CAAP,KAAsC,QAA1C,EAAoD;AAClDF,IAAAA,KAAK,CAACP,WAAN,CAAkBS,OAAlB,IAA6BT,WAA7B;AACD,GAFD,MAEO;AACLO,IAAAA,KAAK,CAACP,WAAN,CAAkBS,OAAlB,IAA6BE,IAAI,CAACC,GAAL,CAASZ,WAAT,EAAsBO,KAAK,CAACP,WAAN,CAAkBS,OAAlB,CAAtB,CAA7B;AACD;AACF,CARH,EAUGH,OAVH,CAUWZ,kBAVX,EAU+Ba,KAAK,IAAI;AACpCA,EAAAA,KAAK,CAACJ,gBAAN,GAAyB,CAACI,KAAK,CAACJ,gBAAhC;AACD,CAZH,EAaGG,OAbH,CAaWV,kBAbX,EAa+B,CAACW,KAAD,EAAQC,MAAR,KAAmB;AAC9CD,EAAAA,KAAK,CAACN,gBAAN,GACEO,MAAM,CAACE,OAAP,CAAeT,gBAAf,KAAoCY,SAApC,GAAgDL,MAAM,CAACE,OAAP,CAAeT,gBAA/D,GAAkF,CAACM,KAAK,CAACN,gBAD3F;AAED,CAhBH,EAiBGK,OAjBH,CAiBWR,YAjBX,EAiByB,CAACS,KAAD,EAAQC,MAAR,KAAmB;AACxCD,EAAAA,KAAK,CAACL,MAAN,GAAeM,MAAM,CAACE,OAAP,CAAeR,MAAf,KAA0BW,SAA1B,GAAsCL,MAAM,CAACE,OAAP,CAAeR,MAArD,GAA8D,CAA7E;AACD,CAnBH,EAoBGI,OApBH,CAoBWT,qBApBX,EAoBkC,CAACU,KAAD,EAAQC,MAAR,KAAmB;AACjDD,EAAAA,KAAK,CAACH,eAAN,GACEI,MAAM,CAACE,OAAP,CAAeN,eAAf,KAAmCS,SAAnC,GAA+CL,MAAM,CAACE,OAAP,CAAeN,eAA9D,GAAgF,EADlF;AAED,CAvBH,CAD0B,CAA5B","sourcesContent":["//@ts-nocheck\nimport { createReducer, nanoid } from '@reduxjs/toolkit'\nimport {\n\n\n  toggleWalletModal,\n  toggleSettingsMenu,\n  updateBlockNumber,\n  toggleWalletModal1,\n  updateTransactionHash,\n  toggleStatus\n} from './actions'\n\n\nexport interface ApplicationState {\n  blockNumber: { [chainId: number]: number }\n  walletModalOpen: boolean\n  settingsMenuOpen: boolean\n}\n\nconst initialState: ApplicationState = {\n  blockNumber: {},\n  walletModalOpen1: false,\n  status: 1,\n  settingsMenuOpen: false,\n  transactionHash:''\n}\n\nexport default createReducer(initialState, builder =>\n  builder\n    .addCase(updateBlockNumber, (state, action) => {\n      const { chainId, blockNumber } = action.payload\n      if (typeof state.blockNumber[chainId] !== 'number') {\n        state.blockNumber[chainId] = blockNumber\n      } else {\n        state.blockNumber[chainId] = Math.max(blockNumber, state.blockNumber[chainId])\n      }\n    })\n \n    .addCase(toggleSettingsMenu, state => {\n      state.settingsMenuOpen = !state.settingsMenuOpen\n    })\n    .addCase(toggleWalletModal1, (state, action) => {\n      state.walletModalOpen1 =\n        action.payload.walletModalOpen1 !== undefined ? action.payload.walletModalOpen1 : !state.walletModalOpen1\n    })\n    .addCase(toggleStatus, (state, action) => {\n      state.status = action.payload.status !== undefined ? action.payload.status : 1\n    })\n    .addCase(updateTransactionHash, (state, action) => {\n      state.transactionHash =\n        action.payload.transactionHash !== undefined ? action.payload.transactionHash : ''\n    })\n  \n   \n)\n"]},"metadata":{},"sourceType":"module"}