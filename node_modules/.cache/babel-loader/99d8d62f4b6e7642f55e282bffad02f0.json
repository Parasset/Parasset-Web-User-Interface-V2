{"ast":null,"code":"var _jsxFileName = \"/Users/miczero/ParaAsset/src/views/MinePool/components/Harvest.tsx\";\n//@ts-nocheck\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { useTranslation } from \"react-i18next\";\nimport TokenSymbol from \"../../../components/TokenSymbol\";\nimport Spacer from \"../../../components/Spacer\";\nimport Card from \"../../../components/Card\";\nimport Button from \"../../../components/Button\";\nimport Value from \"../../../components/Value\";\nimport useIsMobile from \"../../../hooks/useIsMobile\";\n\nconst Harvest = ({\n  mine,\n  mineInfo\n}) => {\n  const isMobile = useIsMobile();\n  const {\n    t\n  } = useTranslation();\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(StyledWrapBox, {\n    className: `wing-blank-lg ${isMobile ? \"\" : \"width-47\"} `,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Spacer, {\n    size: \"mmd\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"color-grey\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, t(\"wdsy\")), /*#__PURE__*/React.createElement(Spacer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"wing-blank-llg  text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TokenSymbol, {\n    symbol: mine.earnTokenName,\n    size: 40,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Spacer, {\n    size: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"font-size-24 bold-600\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  }, \" \", /*#__PURE__*/React.createElement(Value, {\n    value: earned,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Spacer, {\n    size: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"color-grey\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }, t(\"dlqsy\"), \" ( \", mine.earnTokenName, \" )\"), /*#__PURE__*/React.createElement(Spacer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    text: t(\"lqsy\"),\n    variant: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Spacer, {\n    size: \"mmd\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  })));\n};\n\nconst StyledWrapBox = styled(Card)`\n  height: 260px;\n  @media (max-width: 768px) {\n    height: auto;\n  }\n`;\nexport default Harvest;","map":{"version":3,"sources":["/Users/miczero/ParaAsset/src/views/MinePool/components/Harvest.tsx"],"names":["React","styled","useTranslation","TokenSymbol","Spacer","Card","Button","Value","useIsMobile","Harvest","mine","mineInfo","isMobile","t","earnTokenName","earned","StyledWrapBox"],"mappings":";AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,OAAOC,WAAP,MAAwB,iCAAxB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,IAAP,MAAiB,0BAAjB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,KAAP,MAAkB,2BAAlB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;;AACA,MAAMC,OAAiB,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAwB;AAChD,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AACA,QAAM;AAAEK,IAAAA;AAAF,MAAQX,cAAc,EAA5B;AACA,sBACE,uDACE,oBAAC,aAAD;AAAe,IAAA,SAAS,EAAG,iBAAgBU,QAAQ,GAAG,EAAH,GAAQ,UAAW,GAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6BC,CAAC,CAAC,MAAD,CAA9B,CAFF,eAGE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,eAIE;AAAK,IAAA,SAAS,EAAC,6BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAa,IAAA,MAAM,EAAEH,IAAI,CAACI,aAA1B;AAAyC,IAAA,IAAI,EAAE,EAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,IAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,GADH,eAEE,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAEC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAHF,eAOE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,IAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,eAQE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,CAAC,CAAC,OAAD,CADJ,SACkBH,IAAI,CAACI,aADvB,OARF,eAWE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,eAYE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAED,CAAC,CAAC,MAAD,CAAf;AAAyB,IAAA,OAAO,EAAC,WAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,CAJF,eAmBE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnBF,CADF,CADF;AAyBD,CA5BD;;AA8BA,MAAMG,aAAa,GAAGf,MAAM,CAACI,IAAD,CAAO;;;;;CAAnC;AAOA,eAAeI,OAAf","sourcesContent":["//@ts-nocheck\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { useTranslation } from \"react-i18next\";\nimport TokenSymbol from \"../../../components/TokenSymbol\";\nimport Spacer from \"../../../components/Spacer\";\nimport Card from \"../../../components/Card\";\nimport Button from \"../../../components/Button\";\nimport Value from \"../../../components/Value\";\nimport useIsMobile from \"../../../hooks/useIsMobile\";\nconst Harvest: React.FC = ({ mine, mineInfo }) => {\n  const isMobile = useIsMobile();\n  const { t } = useTranslation();\n  return (\n    <>\n      <StyledWrapBox className={`wing-blank-lg ${isMobile ? \"\" : \"width-47\"} `}>\n        <Spacer size=\"mmd\" />\n        <div className=\"color-grey\">{t(\"wdsy\")}</div>\n        <Spacer />\n        <div className=\"wing-blank-llg  text-center\">\n          <TokenSymbol symbol={mine.earnTokenName} size={40} />\n          <Spacer size=\"sm\" />\n          <div className=\"font-size-24 bold-600\">\n            {\" \"}\n            <Value value={earned} />\n          </div>\n          <Spacer size=\"sm\" />\n          <div className=\"color-grey\">\n            {t(\"dlqsy\")} ( {mine.earnTokenName} )\n          </div>\n          <Spacer />\n          <Button text={t(\"lqsy\")} variant=\"secondary\" />\n        </div>\n\n        <Spacer size=\"mmd\" />\n      </StyledWrapBox>\n    </>\n  );\n};\n\nconst StyledWrapBox = styled(Card)`\n  height: 260px;\n  @media (max-width: 768px) {\n    height: auto;\n  }\n`;\n\nexport default Harvest;\n"]},"metadata":{},"sourceType":"module"}