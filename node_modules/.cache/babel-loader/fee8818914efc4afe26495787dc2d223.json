{"ast":null,"code":"var _jsxFileName = \"/Users/miczero/ParaAsset/src/views/MinePool/MinePool.tsx\";\n//@ts-nocheck\nimport React, { useMemo, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useParams } from \"react-router-dom\";\nimport useIsMobile from \"../../hooks/useIsMobile\";\nimport { getNumberToMax, getNumberToAll } from '../../utils/formatBalance';\nimport Back from \"../../components/Back\";\nimport Info from \"./components/Info\";\nimport Harvest from \"./components/Harvest\";\nimport Stake from \"./components/Stake\";\nimport BtnLink from \"../../components/BtnLink\";\nimport Spacer from \"../../components/Spacer\";\nimport useMine from \"../../hooks/useMine\";\nimport useMineInfo from \"../../hooks/useMineInfo\";\nimport HandlerModal from \"../components/HandlerModal\";\n\nconst Mine = () => {\n  const [isOpen, setIsOpen] = useState(false);\n  const isMobile = useIsMobile();\n  const {\n    t\n  } = useTranslation();\n  const {\n    mineId\n  } = useParams();\n  const mine = useMine(mineId);\n  const mineInfo = useMineInfo(mine);\n  const displayStakeBalance = useMemo(() => getNumberToMax(mineInfo.staked), [mineInfo.staked]);\n  const displayStakeBalance1 = useMemo(() => getNumberToAll(mineInfo.staked), [mineInfo.staked]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Back, {\n    text: `${mine === null || mine === void 0 ? void 0 : mine.name} LP ${t(\"kuangchi\")} `,\n    img: mine.icon1,\n    img1: mine.icon2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Info, {\n    mine: mine,\n    mineInfo: mineInfo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: ` ${isMobile ? \"\" : \"flex-jc-center width-100\"} `,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Harvest, {\n    mine: mine,\n    mineInfo: mineInfo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }), isMobile ? /*#__PURE__*/React.createElement(Spacer, {\n    size: \"mmd\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }\n  }) : null, /*#__PURE__*/React.createElement(Stake, {\n    mine: mine,\n    mineInfo: mineInfo,\n    staked: displayStakeBalance,\n    staked1: displayStakeBalance1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(BtnLink, {\n    text: ` ${t(\"hq\")} ${mine.depositTokenName}`,\n    path: `/itank/detail/${mine.depositContract}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(HandlerModal, {\n    isOpen: isOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Mine;","map":{"version":3,"sources":["/Users/miczero/ParaAsset/src/views/MinePool/MinePool.tsx"],"names":["React","useMemo","useState","useTranslation","useParams","useIsMobile","getNumberToMax","getNumberToAll","Back","Info","Harvest","Stake","BtnLink","Spacer","useMine","useMineInfo","HandlerModal","Mine","isOpen","setIsOpen","isMobile","t","mineId","mine","mineInfo","displayStakeBalance","staked","displayStakeBalance1","name","icon1","icon2","depositTokenName","depositContract"],"mappings":";AAAA;AACA,OAAOA,KAAP,IAAwCC,OAAxC,EAAiDC,QAAjD,QAAiE,OAAjE;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,SAASC,cAAT,EAAyBC,cAAzB,QAAiE,2BAAjE;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;;AACA,MAAMC,IAAc,GAAG,MAAM;AAC3B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBjB,QAAQ,CAAC,KAAD,CAApC;AACA,QAAMkB,QAAQ,GAAGf,WAAW,EAA5B;AACA,QAAM;AAAEgB,IAAAA;AAAF,MAAQlB,cAAc,EAA5B;AACA,QAAM;AAAEmB,IAAAA;AAAF,MAAalB,SAAS,EAA5B;AACA,QAAMmB,IAAI,GAAGT,OAAO,CAACQ,MAAD,CAApB;AACA,QAAME,QAAQ,GAAGT,WAAW,CAACQ,IAAD,CAA5B;AACA,QAAME,mBAAmB,GAAGxB,OAAO,CAAC,MAAMK,cAAc,CAACkB,QAAQ,CAACE,MAAV,CAArB,EAAwC,CAACF,QAAQ,CAACE,MAAV,CAAxC,CAAnC;AACA,QAAMC,oBAAoB,GAAG1B,OAAO,CAAC,MAAMM,cAAc,CAACiB,QAAQ,CAACE,MAAV,CAArB,EAAwC,CAACF,QAAQ,CAACE,MAAV,CAAxC,CAApC;AAEA,sBACE,uDACE,oBAAC,IAAD;AACE,IAAA,IAAI,EAAG,GAAEH,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEK,IAAK,OAAMP,CAAC,CAAC,UAAD,CAAa,GAD1C;AAEE,IAAA,GAAG,EAAEE,IAAI,CAACM,KAFZ;AAGE,IAAA,IAAI,EAAEN,IAAI,CAACO,KAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAME,oBAAC,IAAD;AAAO,IAAA,IAAI,EAAEP,IAAb;AAAmB,IAAA,QAAQ,EAAEC,QAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,eAOE;AAAK,IAAA,SAAS,EAAG,IAAGJ,QAAQ,GAAG,EAAH,GAAQ,0BAA2B,GAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAS,IAAA,IAAI,EAAEG,IAAf;AAAqB,IAAA,QAAQ,EAAEC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGJ,QAAQ,gBAAG,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAA2B,IAFtC,eAGE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAEG,IAAb;AAAmB,IAAA,QAAQ,EAAEC,QAA7B;AAAuC,IAAA,MAAM,EAAEC,mBAA/C;AAAsE,IAAA,OAAO,EAAEE,oBAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CAPF,eAYE,oBAAC,OAAD;AACE,IAAA,IAAI,EAAG,IAAGN,CAAC,CAAC,IAAD,CAAO,IAAGE,IAAI,CAACQ,gBAAiB,EAD7C;AAEE,IAAA,IAAI,EAAG,iBAAgBR,IAAI,CAACS,eAAgB,EAF9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,eAgBE,oBAAC,YAAD;AACI,IAAA,MAAM,EAAEd,MADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBF,CADF;AAsBD,CAhCD;;AAkCA,eAAeD,IAAf","sourcesContent":["//@ts-nocheck\nimport React, { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useParams } from \"react-router-dom\";\nimport useIsMobile from \"../../hooks/useIsMobile\";\nimport { getNumberToMax, getNumberToAll, getDisplayNumber } from '../../utils/formatBalance'\nimport Back from \"../../components/Back\";\nimport Info from \"./components/Info\";\nimport Harvest from \"./components/Harvest\";\nimport Stake from \"./components/Stake\";\nimport BtnLink from \"../../components/BtnLink\";\nimport Spacer from \"../../components/Spacer\";\nimport useMine from \"../../hooks/useMine\";\nimport useMineInfo from \"../../hooks/useMineInfo\";\nimport HandlerModal from \"../components/HandlerModal\";\nconst Mine: React.FC = () => {\n  const [isOpen, setIsOpen] = useState(false)\n  const isMobile = useIsMobile();\n  const { t } = useTranslation();\n  const { mineId } = useParams();\n  const mine = useMine(mineId);\n  const mineInfo = useMineInfo(mine);\n  const displayStakeBalance = useMemo(() => getNumberToMax(mineInfo.staked), [mineInfo.staked])\n  const displayStakeBalance1 = useMemo(() => getNumberToAll(mineInfo.staked), [mineInfo.staked])\n  \n  return (\n    <>\n      <Back\n        text={`${mine?.name} LP ${t(\"kuangchi\")} `}\n        img={mine.icon1}\n        img1={mine.icon2}\n      />\n      <Info  mine={mine} mineInfo={mineInfo}/>\n      <div className={` ${isMobile ? \"\" : \"flex-jc-center width-100\"} `}>\n        <Harvest mine={mine} mineInfo={mineInfo}/>\n        {isMobile ? <Spacer size=\"mmd\" /> : null}\n        <Stake mine={mine} mineInfo={mineInfo} staked={displayStakeBalance}   staked1={displayStakeBalance1}/>\n      </div>\n      <BtnLink\n        text={` ${t(\"hq\")} ${mine.depositTokenName}`}\n        path={`/itank/detail/${mine.depositContract}`}\n      />\n      <HandlerModal\n          isOpen={isOpen}\n      />\n    </>\n  );\n};\n\nexport default Mine;\n"]},"metadata":{},"sourceType":"module"}