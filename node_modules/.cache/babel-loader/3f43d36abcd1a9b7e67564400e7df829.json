{"ast":null,"code":"var _jsxFileName = \"/Users/miczero/ParaAsset/src/views/Home/Home.tsx\";\nimport React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport useIsMobile from '../../hooks/useIsMobile';\nimport Page from '../../components/Page';\nimport useBasisCash from '../../hooks/useBasisCash';\nimport config from '../../config';\n\nconst Home = () => {\n  const isMobile = useIsMobile();\n  const basisCash = useBasisCash();\n  const {\n    t\n  } = useTranslation();\n  const [{\n    cash,\n    bond,\n    share\n  }, setStats] = useState({});\n  const fetchStats = useCallback(async () => {\n    const [cash, bond, share] = await Promise.all([basisCash.getCashStatFromUniswap(), basisCash.getBondStat(), basisCash.getShareStat()]);\n\n    if (Date.now() < config.bondLaunchesAt.getTime()) {\n      bond.priceInDAI = '-';\n    }\n\n    setStats({\n      cash,\n      bond,\n      share\n    });\n  }, [basisCash, setStats]);\n  useEffect(() => {\n    if (basisCash) {\n      fetchStats().catch(err => console.error(err.stack));\n    }\n  }, [basisCash]);\n  const cashAddr = useMemo(() => basisCash === null || basisCash === void 0 ? void 0 : basisCash.GAC.address, [basisCash]);\n  const shareAddr = useMemo(() => basisCash === null || basisCash === void 0 ? void 0 : basisCash.GAS.address, [basisCash]);\n  const bondAddr = useMemo(() => basisCash === null || basisCash === void 0 ? void 0 : basisCash.GAB.address, [basisCash]);\n  return /*#__PURE__*/React.createElement(Page, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  });\n};\n\nexport default Home;","map":{"version":3,"sources":["/Users/miczero/ParaAsset/src/views/Home/Home.tsx"],"names":["React","useCallback","useEffect","useMemo","useState","useTranslation","useIsMobile","Page","useBasisCash","config","Home","isMobile","basisCash","t","cash","bond","share","setStats","fetchStats","Promise","all","getCashStatFromUniswap","getBondStat","getShareStat","Date","now","bondLaunchesAt","getTime","priceInDAI","catch","err","console","error","stack","cashAddr","GAC","address","shareAddr","GAS","bondAddr","GAB"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,SAA7B,EAAwCC,OAAxC,EAAiDC,QAAjD,QAAiE,OAAjE;AACA,SAASC,cAAT,QAA+B,eAA/B;AAEA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AAKA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,OAAOC,MAAP,MAAmB,cAAnB;;AAIA,MAAMC,IAAc,GAAG,MAAM;AAC3B,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAMM,SAAS,GAAGJ,YAAY,EAA9B;AACA,QAAM;AAAEK,IAAAA;AAAF,MAAQR,cAAc,EAA5B;AACA,QAAM,CAAC;AAAES,IAAAA,IAAF;AAAQC,IAAAA,IAAR;AAAcC,IAAAA;AAAd,GAAD,EAAwBC,QAAxB,IAAoCb,QAAQ,CAAe,EAAf,CAAlD;AACA,QAAMc,UAAU,GAAGjB,WAAW,CAAC,YAAY;AACzC,UAAM,CAACa,IAAD,EAAOC,IAAP,EAAaC,KAAb,IAAsB,MAAMG,OAAO,CAACC,GAAR,CAAY,CAC5CR,SAAS,CAACS,sBAAV,EAD4C,EAE5CT,SAAS,CAACU,WAAV,EAF4C,EAG5CV,SAAS,CAACW,YAAV,EAH4C,CAAZ,CAAlC;;AAKA,QAAIC,IAAI,CAACC,GAAL,KAAahB,MAAM,CAACiB,cAAP,CAAsBC,OAAtB,EAAjB,EAAkD;AAChDZ,MAAAA,IAAI,CAACa,UAAL,GAAkB,GAAlB;AACD;;AACDX,IAAAA,QAAQ,CAAC;AAAEH,MAAAA,IAAF;AAAQC,MAAAA,IAAR;AAAcC,MAAAA;AAAd,KAAD,CAAR;AACD,GAV6B,EAU3B,CAACJ,SAAD,EAAYK,QAAZ,CAV2B,CAA9B;AAYAf,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIU,SAAJ,EAAe;AACbM,MAAAA,UAAU,GAAGW,KAAb,CAAoBC,GAAD,IAASC,OAAO,CAACC,KAAR,CAAcF,GAAG,CAACG,KAAlB,CAA5B;AACD;AACF,GAJQ,EAIN,CAACrB,SAAD,CAJM,CAAT;AAMA,QAAMsB,QAAQ,GAAG/B,OAAO,CAAC,MAAMS,SAAN,aAAMA,SAAN,uBAAMA,SAAS,CAAEuB,GAAX,CAAeC,OAAtB,EAA+B,CAACxB,SAAD,CAA/B,CAAxB;AACA,QAAMyB,SAAS,GAAGlC,OAAO,CAAC,MAAMS,SAAN,aAAMA,SAAN,uBAAMA,SAAS,CAAE0B,GAAX,CAAeF,OAAtB,EAA+B,CAACxB,SAAD,CAA/B,CAAzB;AACA,QAAM2B,QAAQ,GAAGpC,OAAO,CAAC,MAAMS,SAAN,aAAMA,SAAN,uBAAMA,SAAS,CAAE4B,GAAX,CAAeJ,OAAtB,EAA+B,CAACxB,SAAD,CAA/B,CAAxB;AAEA,sBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAKD,CAhCD;;AAkCA,eAAeF,IAAf","sourcesContent":["import React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport styled from 'styled-components';\nimport useIsMobile from '../../hooks/useIsMobile';\nimport Page from '../../components/Page';\nimport PageHeader from '../../components/PageHeader';\nimport Spacer from '../../components/Spacer';\nimport HomeCard from './components/HomeCard';\nimport { OverviewData } from './types';\nimport useBasisCash from '../../hooks/useBasisCash';\nimport config from '../../config';\nimport Notice from '../../components/Notice';\nimport farmer from '../../assets/img/farmer_md.png';\n\nconst Home: React.FC = () => {\n  const isMobile = useIsMobile();\n  const basisCash = useBasisCash();\n  const { t } = useTranslation();\n  const [{ cash, bond, share }, setStats] = useState<OverviewData>({});\n  const fetchStats = useCallback(async () => {\n    const [cash, bond, share] = await Promise.all([\n      basisCash.getCashStatFromUniswap(),\n      basisCash.getBondStat(),\n      basisCash.getShareStat(),\n    ]);\n    if (Date.now() < config.bondLaunchesAt.getTime()) {\n      bond.priceInDAI = '-';\n    }\n    setStats({ cash, bond, share });\n  }, [basisCash, setStats]);\n\n  useEffect(() => {\n    if (basisCash) {\n      fetchStats().catch((err) => console.error(err.stack));\n    }\n  }, [basisCash]);\n\n  const cashAddr = useMemo(() => basisCash?.GAC.address, [basisCash]);\n  const shareAddr = useMemo(() => basisCash?.GAS.address, [basisCash]);\n  const bondAddr = useMemo(() => basisCash?.GAB.address, [basisCash]);\n\n  return (\n    <Page>\n \n    </Page>\n  );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}