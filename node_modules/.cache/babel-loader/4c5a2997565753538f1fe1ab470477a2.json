{"ast":null,"code":"// //@ts-nocheck\n// import { useCallback } from 'react'\n// import {\n//   useWalletModalToggle1,\n//   useStatusToggle,\n//   useStatus,\n//   useUpdateTransactionHash,\n//   useTransactionHash\n// } from '../state/application/hooks'\n// import useBasisCash from './useBasisCash'\n// function useHandleTransactionReceipt() {\n//   const toggleWait = useWalletModalToggle1()\n//   const updateTx = useUpdateTransactionHash()\n//   const toggleStatus = useStatusToggle()\n//   const basisCash = useBasisCash()\n//   return useCallback(\n//     async (func, arg = [], contextObj?: any) => {\n//       try {\n//         toggleStatus(1)\n//         toggleWait(true)\n//         const tx = await func.call(contextObj ? contextObj : basisCash, ...arg)\n//         toggleStatus(2)\n//         const status = await tx.wait()\n//         if (typeof status !== 'string') {\n//           toggleStatus(3)\n//           updateTx(status.transactionHash)\n//           return status\n//         } else {\n//           toggleStatus(4)\n//           return '0'\n//         }\n//       } catch (e) {\n//         toggleStatus(5)\n//         return '0'\n//       }\n//     },\n//     //\n//     [basisCash, toggleStatus, toggleWait]\n//   )\n// }\n// export default useHandleTransactionReceipt","map":{"version":3,"sources":["/Users/miczero/ParaAsset/src/hooks/useHandleTransactionReceipt.ts"],"names":[],"mappings":"AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["// //@ts-nocheck\n// import { useCallback } from 'react'\n\n// import {\n//   useWalletModalToggle1,\n//   useStatusToggle,\n//   useStatus,\n//   useUpdateTransactionHash,\n//   useTransactionHash\n// } from '../state/application/hooks'\n\n// import useBasisCash from './useBasisCash'\n// function useHandleTransactionReceipt() {\n//   const toggleWait = useWalletModalToggle1()\n//   const updateTx = useUpdateTransactionHash()\n//   const toggleStatus = useStatusToggle()\n\n//   const basisCash = useBasisCash()\n//   return useCallback(\n//     async (func, arg = [], contextObj?: any) => {\n//       try {\n//         toggleStatus(1)\n//         toggleWait(true)\n//         const tx = await func.call(contextObj ? contextObj : basisCash, ...arg)\n//         toggleStatus(2)\n//         const status = await tx.wait()\n//         if (typeof status !== 'string') {\n          \n//           toggleStatus(3)\n//           updateTx(status.transactionHash)\n//           return status\n//         } else {\n//           toggleStatus(4)\n//           return '0'\n//         }\n//       } catch (e) {\n//         toggleStatus(5)\n//         return '0'\n//       }\n//     },\n//     //\n//     [basisCash, toggleStatus, toggleWait]\n//   )\n// }\n\n// export default useHandleTransactionReceipt\n"]},"metadata":{},"sourceType":"module"}