{"ast":null,"code":"var _jsxFileName = \"/Users/miczero/ParaAsset/src/views/Bank/components/DepositModal.tsx\";\n//@ts-nocheck\nimport React, { useCallback, useMemo, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport Button from '../../../components/Button';\nimport Modal from '../../../components/Modal';\nimport ModalActions from '../../../components/ModalActions';\nimport ModalTitle from '../../../components/ModalTitle';\nimport TokenInput from '../../../components/TokenInput';\nimport { stakeLimit } from '../../../config';\nimport { useAddPopup } from '../../../state/application/hooks';\nimport { getFullDisplayBalance } from '../../../utils/formatBalance';\n\nconst DepositModal = ({\n  max,\n  isOpen,\n  decimals,\n  onConfirm,\n  onDismiss,\n  tokenName = '',\n  staked\n}) => {\n  const addPopup = useAddPopup();\n  const [val, setVal] = useState('');\n  const {\n    t\n  } = useTranslation();\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max, decimals);\n  }, [max]);\n  const canBuyAmount = useMemo(() => {\n    let balance = parseFloat(fullBalance);\n\n    if (tokenName !== 'GAC_USDT-UNI-LPv2' && tokenName !== 'GAS_USDT-UNI-LPv2') {\n      var stakedNum = parseFloat(staked);\n      var limit = stakeLimit[tokenName] - stakedNum;\n      const amount = balance > limit ? limit : balance;\n      return amount;\n    } else {\n      return balance;\n    }\n  }, [fullBalance, tokenName, staked]);\n  const handleChange = useCallback(e => {\n    const minLimit = 0;\n    var {\n      value\n    } = e.currentTarget;\n    var value1 = parseFloat(value);\n    value = value1 > canBuyAmount ? canBuyAmount : value !== '' && value1 <= minLimit ? minLimit : value !== '' && !Number.isFinite(value1) ? minLimit : value;\n    setVal(value);\n  }, [setVal, canBuyAmount]);\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance);\n  }, [fullBalance, setVal]);\n  return /*#__PURE__*/React.createElement(Modal, {\n    isOpen: isOpen,\n    onDismiss: onDismiss,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ModalTitle, {\n    text: `${t('cunkuan')} ${tokenName}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(TokenInput, {\n    value: val,\n    onSelectMax: handleSelectMax,\n    onChange: handleChange,\n    max: fullBalance,\n    symbol: tokenName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ModalActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    text: t('quxiao'),\n    variant: \"secondary\",\n    onClick: onDismiss,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    text: t('queren'),\n    disabled: !canBuyAmount,\n    onClick: () => {\n      if (parseFloat(val) > canBuyAmount) {\n        addPopup({\n          error: {\n            message: '超出最大抵押限制'\n          }\n        });\n      } else {\n        onConfirm(val);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default DepositModal;","map":{"version":3,"sources":["/Users/miczero/ParaAsset/src/views/Bank/components/DepositModal.tsx"],"names":["React","useCallback","useMemo","useState","useTranslation","Button","Modal","ModalActions","ModalTitle","TokenInput","stakeLimit","useAddPopup","getFullDisplayBalance","DepositModal","max","isOpen","decimals","onConfirm","onDismiss","tokenName","staked","addPopup","val","setVal","t","fullBalance","canBuyAmount","balance","parseFloat","stakedNum","limit","amount","handleChange","e","minLimit","value","currentTarget","value1","Number","isFinite","handleSelectMax","error","message"],"mappings":"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","sourcesContent":["//@ts-nocheck\nimport React, { useCallback, useMemo, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport Button from '../../../components/Button';\nimport Modal, { ModalProps } from '../../../components/Modal';\nimport ModalActions from '../../../components/ModalActions';\nimport ModalTitle from '../../../components/ModalTitle';\nimport TokenInput from '../../../components/TokenInput';\nimport { stakeLimit } from '../../../config';\nimport { useAddPopup } from '../../../state/application/hooks';\nimport { getFullDisplayBalance } from '../../../utils/formatBalance';\nimport { BigNumber } from 'ethers';\n\ninterface DepositModalProps extends ModalProps {\n  max: BigNumber;\n  decimals: number;\n  onConfirm: (amount: string) => void;\n  tokenName?: string;\n}\n\nconst DepositModal: React.FC<DepositModalProps> = ({\n  max,\n  isOpen,\n  decimals,\n  onConfirm,\n  onDismiss,\n  tokenName = '',\n  staked,\n}) => {\n  const addPopup = useAddPopup();\n  const [val, setVal] = useState('');\n  const { t } = useTranslation();\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max, decimals);\n  }, [max]);\n\n  const canBuyAmount = useMemo(() => {\n    let balance: any = parseFloat(fullBalance);\n    if (tokenName !== 'GAC_USDT-UNI-LPv2' && tokenName !== 'GAS_USDT-UNI-LPv2') {\n      var stakedNum = parseFloat(staked);\n      var limit = stakeLimit[tokenName] - stakedNum;\n      const amount = balance > limit ? limit : balance;\n      return amount;\n    } else {\n      return balance;\n    }\n  }, [fullBalance, tokenName, staked]);\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      const minLimit = 0;\n      var { value } = e.currentTarget;\n      var value1 = parseFloat(value);\n      value =\n        value1 > canBuyAmount\n          ? canBuyAmount\n          : value !== '' && value1 <= minLimit\n          ? minLimit\n          : value !== '' && !Number.isFinite(value1)\n          ? minLimit\n          : value;\n      setVal(value);\n    },\n    [setVal, canBuyAmount],\n  );\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance);\n  }, [fullBalance, setVal]);\n\n  return (\n    <Modal isOpen={isOpen} onDismiss={onDismiss}>\n      <ModalTitle text={`${t('cunkuan')} ${tokenName}`} />\n      <TokenInput\n        value={val}\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        max={fullBalance}\n        symbol={tokenName}\n      />\n      <ModalActions>\n        <Button text={t('quxiao')} variant=\"secondary\" onClick={onDismiss} />\n        <Button\n          text={t('queren')}\n          disabled={!canBuyAmount}\n          onClick={() => {\n            if (parseFloat(val) > canBuyAmount) {\n              addPopup({ error: { message: '超出最大抵押限制' } });\n            } else {\n              onConfirm(val);\n            }\n          }}\n        />\n      </ModalActions>\n    </Modal>\n  );\n};\n\nexport default DepositModal;\n"]},"metadata":{},"sourceType":"module"}