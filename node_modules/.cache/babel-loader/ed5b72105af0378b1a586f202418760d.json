{"ast":null,"code":"//@ts-nocheck\nimport { useCallback, useEffect, useState } from \"react\";\nimport BigNumber1 from 'bignumber.js';\nimport useBasisCash from \"./useBasisCash\";\nimport { useBlockNumber } from \"../state/application/hooks\";\n\nconst useMineInfo = mine => {\n  const [staked, setStaked] = useState(new BigNumber1(0));\n  const basisCash = useBasisCash();\n  const block = useBlockNumber();\n  const fetchStaked = useCallback(async (address = basisCash === null || basisCash === void 0 ? void 0 : basisCash.myAccount) => {\n    const staked = await basisCash.getStaked(mine.depositToken, address);\n    setStaked(staked);\n    return staked;\n  }, [basisCash === null || basisCash === void 0 ? void 0 : basisCash.myAccount, mine]);\n  const fetchInfo = useCallback(async () => {\n    fetchStaked();\n  }, [basisCash === null || basisCash === void 0 ? void 0 : basisCash.myAccount, mine]);\n  useEffect(() => {\n    if (basisCash === null || basisCash === void 0 ? void 0 : basisCash.myAccount) {\n      fetchInfo();\n    }\n  }, [basisCash === null || basisCash === void 0 ? void 0 : basisCash.myAccount, block, mine]);\n  return {\n    mineInfo: {\n      staked\n    }\n  };\n};\n\nexport default useMineInfo;","map":{"version":3,"sources":["/Users/miczero/ParaAsset/src/hooks/useMineInfo.ts"],"names":["useCallback","useEffect","useState","BigNumber1","useBasisCash","useBlockNumber","useMineInfo","mine","staked","setStaked","basisCash","block","fetchStaked","address","myAccount","getStaked","depositToken","fetchInfo","mineInfo"],"mappings":"AAAA;AACA,SAASA,WAAT,EAAsBC,SAAtB,EAAiCC,QAAjC,QAAiD,OAAjD;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,cAAT,QAA+B,4BAA/B;;AAEA,MAAMC,WAAW,GAAIC,IAAD,IAAU;AAC5B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,IAAIC,UAAJ,CAAe,CAAf,CAAD,CAApC;AAEA,QAAMO,SAAS,GAAGN,YAAY,EAA9B;AACA,QAAMO,KAAK,GAAGN,cAAc,EAA5B;AAEA,QAAMO,WAAW,GAAGZ,WAAW,CAC7B,OAAOa,OAAO,GAAGH,SAAH,aAAGA,SAAH,uBAAGA,SAAS,CAAEI,SAA5B,KAA0C;AACxC,UAAMN,MAAM,GAAG,MAAME,SAAS,CAACK,SAAV,CAAoBR,IAAI,CAACS,YAAzB,EAAuCH,OAAvC,CAArB;AACAJ,IAAAA,SAAS,CAACD,MAAD,CAAT;AACA,WAAOA,MAAP;AACD,GAL4B,EAM7B,CAACE,SAAD,aAACA,SAAD,uBAACA,SAAS,CAAEI,SAAZ,EAAuBP,IAAvB,CAN6B,CAA/B;AASA,QAAMU,SAAS,GAAGjB,WAAW,CAAC,YAAY;AACxCY,IAAAA,WAAW;AACZ,GAF4B,EAE1B,CAACF,SAAD,aAACA,SAAD,uBAACA,SAAS,CAAEI,SAAZ,EAAuBP,IAAvB,CAF0B,CAA7B;AAIAN,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIS,SAAJ,aAAIA,SAAJ,uBAAIA,SAAS,CAAEI,SAAf,EAA0B;AACxBG,MAAAA,SAAS;AACV;AACF,GAJQ,EAIN,CAACP,SAAD,aAACA,SAAD,uBAACA,SAAS,CAAEI,SAAZ,EAAuBH,KAAvB,EAA8BJ,IAA9B,CAJM,CAAT;AAMA,SAAO;AAAEW,IAAAA,QAAQ,EAAE;AAAEV,MAAAA;AAAF;AAAZ,GAAP;AACD,CA1BD;;AA4BA,eAAeF,WAAf","sourcesContent":["//@ts-nocheck\nimport { useCallback, useEffect, useState } from \"react\";\nimport BigNumber1 from 'bignumber.js';\nimport useBasisCash from \"./useBasisCash\";\nimport { useBlockNumber } from \"../state/application/hooks\";\n\nconst useMineInfo = (mine) => {\n  const [staked, setStaked] = useState(new BigNumber1(0));\n\n  const basisCash = useBasisCash();\n  const block = useBlockNumber();\n\n  const fetchStaked = useCallback(\n    async (address = basisCash?.myAccount) => {\n      const staked = await basisCash.getStaked(mine.depositToken, address);\n      setStaked(staked);\n      return staked\n    },\n    [basisCash?.myAccount, mine]\n  );\n\n  const fetchInfo = useCallback(async () => {\n    fetchStaked();\n  }, [basisCash?.myAccount, mine]);\n\n  useEffect(() => {\n    if (basisCash?.myAccount) {\n      fetchInfo();\n    }\n  }, [basisCash?.myAccount, block, mine]);\n\n  return { mineInfo: { staked } };\n};\n\nexport default useMineInfo;\n"]},"metadata":{},"sourceType":"module"}