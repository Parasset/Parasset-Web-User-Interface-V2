{"ast":null,"code":"//@ts-nocheck\nimport { useCallback, useEffect, useState } from \"react\";\nimport useBasisCash from \"./useBasisCash\";\nimport { useBlockNumber } from \"../state/application/hooks\";\n\nconst useMineInfo = mine => {\n  const [staked, setStaked] = useState(0);\n  const basisCash = useBasisCash();\n  const block = useBlockNumber();\n  const fetchStaked = useCallback(async (address = basisCash === null || basisCash === void 0 ? void 0 : basisCash.myAccount) => {\n    const staked = await basisCash.getStaked(mine.depositToken, address);\n    console.log(\"ðŸš€ ~ file: useMineInfo.ts ~ line 15 ~ staked\", staked); // setStaked(staked.toNumber());\n    // return staked.toNumber()\n  }, [basisCash === null || basisCash === void 0 ? void 0 : basisCash.myAccount, mine]);\n  const fetchInfo = useCallback(async () => {\n    fetchStaked();\n  }, [basisCash === null || basisCash === void 0 ? void 0 : basisCash.myAccount, mine]);\n  useEffect(() => {\n    if (basisCash === null || basisCash === void 0 ? void 0 : basisCash.myAccount) {\n      fetchInfo();\n    }\n  }, [basisCash === null || basisCash === void 0 ? void 0 : basisCash.myAccount, block, mine]);\n  return {\n    mineInfo: {\n      staked\n    }\n  };\n};\n\nexport default useMineInfo;","map":{"version":3,"sources":["/Users/miczero/ParaAsset/src/hooks/useMineInfo.ts"],"names":["useCallback","useEffect","useState","useBasisCash","useBlockNumber","useMineInfo","mine","staked","setStaked","basisCash","block","fetchStaked","address","myAccount","getStaked","depositToken","console","log","fetchInfo","mineInfo"],"mappings":"AAAA;AACA,SAASA,WAAT,EAAsBC,SAAtB,EAAiCC,QAAjC,QAAiD,OAAjD;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,cAAT,QAA+B,4BAA/B;;AAEA,MAAMC,WAAW,GAAIC,IAAD,IAAU;AAC5B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,CAAD,CAApC;AAEA,QAAMO,SAAS,GAAGN,YAAY,EAA9B;AACA,QAAMO,KAAK,GAAGN,cAAc,EAA5B;AAEA,QAAMO,WAAW,GAAGX,WAAW,CAC7B,OAAOY,OAAO,GAAGH,SAAH,aAAGA,SAAH,uBAAGA,SAAS,CAAEI,SAA5B,KAA0C;AACxC,UAAMN,MAAM,GAAG,MAAME,SAAS,CAACK,SAAV,CAAoBR,IAAI,CAACS,YAAzB,EAAuCH,OAAvC,CAArB;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAY,8CAAZ,EAA4DV,MAA5D,EAFwC,CAGxC;AACA;AACD,GAN4B,EAO7B,CAACE,SAAD,aAACA,SAAD,uBAACA,SAAS,CAAEI,SAAZ,EAAuBP,IAAvB,CAP6B,CAA/B;AAUA,QAAMY,SAAS,GAAGlB,WAAW,CAAC,YAAY;AACxCW,IAAAA,WAAW;AACZ,GAF4B,EAE1B,CAACF,SAAD,aAACA,SAAD,uBAACA,SAAS,CAAEI,SAAZ,EAAuBP,IAAvB,CAF0B,CAA7B;AAIAL,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIQ,SAAJ,aAAIA,SAAJ,uBAAIA,SAAS,CAAEI,SAAf,EAA0B;AACxBK,MAAAA,SAAS;AACV;AACF,GAJQ,EAIN,CAACT,SAAD,aAACA,SAAD,uBAACA,SAAS,CAAEI,SAAZ,EAAuBH,KAAvB,EAA8BJ,IAA9B,CAJM,CAAT;AAMA,SAAO;AAAEa,IAAAA,QAAQ,EAAE;AAAEZ,MAAAA;AAAF;AAAZ,GAAP;AACD,CA3BD;;AA6BA,eAAeF,WAAf","sourcesContent":["//@ts-nocheck\nimport { useCallback, useEffect, useState } from \"react\";\nimport useBasisCash from \"./useBasisCash\";\nimport { useBlockNumber } from \"../state/application/hooks\";\n\nconst useMineInfo = (mine) => {\n  const [staked, setStaked] = useState(0);\n\n  const basisCash = useBasisCash();\n  const block = useBlockNumber();\n\n  const fetchStaked = useCallback(\n    async (address = basisCash?.myAccount) => {\n      const staked = await basisCash.getStaked(mine.depositToken, address);\n      console.log(\"ðŸš€ ~ file: useMineInfo.ts ~ line 15 ~ staked\", staked)\n      // setStaked(staked.toNumber());\n      // return staked.toNumber()\n    },\n    [basisCash?.myAccount, mine]\n  );\n\n  const fetchInfo = useCallback(async () => {\n    fetchStaked();\n  }, [basisCash?.myAccount, mine]);\n\n  useEffect(() => {\n    if (basisCash?.myAccount) {\n      fetchInfo();\n    }\n  }, [basisCash?.myAccount, block, mine]);\n\n  return { mineInfo: { staked } };\n};\n\nexport default useMineInfo;\n"]},"metadata":{},"sourceType":"module"}