{"ast":null,"code":"//@ts-nocheck\n//@ts-nocheck\nimport { useCallback } from 'react';\nimport { useWalletModalToggle1, useStatusToggle, useUpdateTransactionHash } from './../state/application/hooks';\nimport useBasisCash from './useBasisCash';\n\nfunction useHandleTransactionReceipt() {\n  const toggleWait = useWalletModalToggle1();\n  const updateTx = useUpdateTransactionHash();\n  const toggleStatus = useStatusToggle();\n  const basisCash = useBasisCash();\n  return useCallback(async (func, arg = [], contextObj) => {\n    try {\n      toggleStatus(1);\n      toggleWait(true);\n      const tx = await func.call(contextObj ? contextObj : basisCash, ...arg);\n      toggleStatus(2);\n      const status = await tx.wait();\n\n      if (typeof status !== 'string') {\n        toggleStatus(3);\n        updateTx(status.transactionHash);\n        return status;\n      } else {\n        toggleStatus(4);\n        return '0';\n      }\n    } catch (e) {\n      toggleStatus(5);\n      return '0';\n    }\n  }, //\n  [basisCash, toggleStatus, toggleWait]);\n}\n\nexport default useHandleTransactionReceipt;","map":{"version":3,"sources":["/Users/miczero/ParaAsset/src/hooks/useHandleTransactionReceipt.ts"],"names":["useCallback","useWalletModalToggle1","useStatusToggle","useUpdateTransactionHash","useBasisCash","useHandleTransactionReceipt","toggleWait","updateTx","toggleStatus","basisCash","func","arg","contextObj","tx","call","status","wait","transactionHash","e"],"mappings":"AAAA;AAGA;AACA,SAASA,WAAT,QAA4B,OAA5B;AAEA,SACEC,qBADF,EAEEC,eAFF,EAIEC,wBAJF,QAMO,8BANP;AAQA,OAAOC,YAAP,MAAyB,gBAAzB;;AACA,SAASC,2BAAT,GAAuC;AACrC,QAAMC,UAAU,GAAGL,qBAAqB,EAAxC;AACA,QAAMM,QAAQ,GAAGJ,wBAAwB,EAAzC;AACA,QAAMK,YAAY,GAAGN,eAAe,EAApC;AAEA,QAAMO,SAAS,GAAGL,YAAY,EAA9B;AACA,SAAOJ,WAAW,CAChB,OAAOU,IAAP,EAAaC,GAAG,GAAG,EAAnB,EAAuBC,UAAvB,KAA4C;AAC1C,QAAI;AACFJ,MAAAA,YAAY,CAAC,CAAD,CAAZ;AACAF,MAAAA,UAAU,CAAC,IAAD,CAAV;AACA,YAAMO,EAAE,GAAG,MAAMH,IAAI,CAACI,IAAL,CAAUF,UAAU,GAAGA,UAAH,GAAgBH,SAApC,EAA+C,GAAGE,GAAlD,CAAjB;AACAH,MAAAA,YAAY,CAAC,CAAD,CAAZ;AACA,YAAMO,MAAM,GAAG,MAAMF,EAAE,CAACG,IAAH,EAArB;;AACA,UAAI,OAAOD,MAAP,KAAkB,QAAtB,EAAgC;AAE9BP,QAAAA,YAAY,CAAC,CAAD,CAAZ;AACAD,QAAAA,QAAQ,CAACQ,MAAM,CAACE,eAAR,CAAR;AACA,eAAOF,MAAP;AACD,OALD,MAKO;AACLP,QAAAA,YAAY,CAAC,CAAD,CAAZ;AACA,eAAO,GAAP;AACD;AACF,KAfD,CAeE,OAAOU,CAAP,EAAU;AACVV,MAAAA,YAAY,CAAC,CAAD,CAAZ;AACA,aAAO,GAAP;AACD;AACF,GArBe,EAsBhB;AACA,GAACC,SAAD,EAAYD,YAAZ,EAA0BF,UAA1B,CAvBgB,CAAlB;AAyBD;;AAED,eAAeD,2BAAf","sourcesContent":["//@ts-nocheck\n\n\n//@ts-nocheck\nimport { useCallback } from 'react'\n\nimport {\n  useWalletModalToggle1,\n  useStatusToggle,\n  useStatus,\n  useUpdateTransactionHash,\n  useTransactionHash\n} from './../state/application/hooks'\n\nimport useBasisCash from './useBasisCash'\nfunction useHandleTransactionReceipt() {\n  const toggleWait = useWalletModalToggle1()\n  const updateTx = useUpdateTransactionHash()\n  const toggleStatus = useStatusToggle()\n\n  const basisCash = useBasisCash()\n  return useCallback(\n    async (func, arg = [], contextObj?: any) => {\n      try {\n        toggleStatus(1)\n        toggleWait(true)\n        const tx = await func.call(contextObj ? contextObj : basisCash, ...arg)\n        toggleStatus(2)\n        const status = await tx.wait()\n        if (typeof status !== 'string') {\n          \n          toggleStatus(3)\n          updateTx(status.transactionHash)\n          return status\n        } else {\n          toggleStatus(4)\n          return '0'\n        }\n      } catch (e) {\n        toggleStatus(5)\n        return '0'\n      }\n    },\n    //\n    [basisCash, toggleStatus, toggleWait]\n  )\n}\n\nexport default useHandleTransactionReceipt\n"]},"metadata":{},"sourceType":"module"}