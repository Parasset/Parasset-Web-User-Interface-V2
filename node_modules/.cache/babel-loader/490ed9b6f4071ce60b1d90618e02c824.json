{"ast":null,"code":"//@ts-nocheck\nimport { createReducer, nanoid } from '@reduxjs/toolkit';\nimport { addPopup, removePopup, toggleWalletModal, toggleSettingsMenu, updateBlockNumber, toggleWalletModal1, updateTransactionHash, toggleStatus } from './actions';\nconst initialState = {\n  blockNumber: {},\n  popupList: [],\n  walletModalOpen: false,\n  walletModalOpen1: false,\n  status: 1,\n  settingsMenuOpen: false,\n  transactionHash: ''\n};\nexport default createReducer(initialState, builder => builder.addCase(updateBlockNumber, (state, action) => {\n  const {\n    chainId,\n    blockNumber\n  } = action.payload;\n\n  if (typeof state.blockNumber[chainId] !== 'number') {\n    state.blockNumber[chainId] = blockNumber;\n  } else {\n    state.blockNumber[chainId] = Math.max(blockNumber, state.blockNumber[chainId]);\n  }\n}).addCase(toggleWalletModal, state => {\n  state.walletModalOpen = !state.walletModalOpen;\n}).addCase(toggleSettingsMenu, state => {\n  state.settingsMenuOpen = !state.settingsMenuOpen;\n}).addCase(toggleWalletModal1, (state, action) => {\n  state.walletModalOpen1 = action.payload.walletModalOpen1 !== undefined ? action.payload.walletModalOpen1 : !state.walletModalOpen1;\n}).addCase(toggleStatus, (state, action) => {\n  state.status = action.payload.status !== undefined ? action.payload.status : 1;\n}).addCase(updateTransactionHash, (state, action) => {\n  state.transactionHash = action.payload.transactionHash !== undefined ? action.payload.transactionHash : '';\n}).addCase(addPopup, (state, {\n  payload: {\n    content,\n    key,\n    removeAfterMs = 15000\n  }\n}) => {\n  state.popupList = (key ? state.popupList.filter(popup => popup.key !== key) : state.popupList).concat([{\n    key: key || nanoid(),\n    show: true,\n    content,\n    removeAfterMs\n  }]);\n}).addCase(removePopup, (state, {\n  payload: {\n    key\n  }\n}) => {\n  state.popupList.forEach(p => {\n    if (p.key === key) {\n      p.show = false;\n    }\n  });\n}));","map":{"version":3,"sources":["/Users/miczero/ParaAsset/src/state/application/reducer.ts"],"names":["createReducer","nanoid","addPopup","removePopup","toggleWalletModal","toggleSettingsMenu","updateBlockNumber","toggleWalletModal1","updateTransactionHash","toggleStatus","initialState","blockNumber","popupList","walletModalOpen","walletModalOpen1","status","settingsMenuOpen","transactionHash","builder","addCase","state","action","chainId","payload","Math","max","undefined","content","key","removeAfterMs","filter","popup","concat","show","forEach","p"],"mappings":"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","sourcesContent":["//@ts-nocheck\nimport { createReducer, nanoid } from '@reduxjs/toolkit'\nimport {\n  addPopup,\n  PopupContent,\n  removePopup,\n  toggleWalletModal,\n  toggleSettingsMenu,\n  updateBlockNumber,\n  toggleWalletModal1,\n  updateTransactionHash,\n  toggleStatus\n} from './actions'\n\ntype PopupList = Array<{ key: string; show: boolean; content: PopupContent; removeAfterMs: number | null }>\n\nexport interface ApplicationState {\n  blockNumber: { [chainId: number]: number }\n  popupList: PopupList\n  walletModalOpen: boolean\n  settingsMenuOpen: boolean\n}\n\nconst initialState: ApplicationState = {\n  blockNumber: {},\n  popupList: [],\n  walletModalOpen: false,\n  walletModalOpen1: false,\n  status: 1,\n  settingsMenuOpen: false,\n  transactionHash:''\n}\n\nexport default createReducer(initialState, builder =>\n  builder\n    .addCase(updateBlockNumber, (state, action) => {\n      const { chainId, blockNumber } = action.payload\n      if (typeof state.blockNumber[chainId] !== 'number') {\n        state.blockNumber[chainId] = blockNumber\n      } else {\n        state.blockNumber[chainId] = Math.max(blockNumber, state.blockNumber[chainId])\n      }\n    })\n    .addCase(toggleWalletModal, state => {\n      state.walletModalOpen = !state.walletModalOpen\n    })\n    .addCase(toggleSettingsMenu, state => {\n      state.settingsMenuOpen = !state.settingsMenuOpen\n    })\n    .addCase(toggleWalletModal1, (state, action) => {\n      state.walletModalOpen1 =\n        action.payload.walletModalOpen1 !== undefined ? action.payload.walletModalOpen1 : !state.walletModalOpen1\n    })\n    .addCase(toggleStatus, (state, action) => {\n      state.status = action.payload.status !== undefined ? action.payload.status : 1\n    })\n    .addCase(updateTransactionHash, (state, action) => {\n      state.transactionHash =\n        action.payload.transactionHash !== undefined ? action.payload.transactionHash : ''\n    })\n  \n    .addCase(addPopup, (state, { payload: { content, key, removeAfterMs = 15000 } }) => {\n      state.popupList = (key ? state.popupList.filter(popup => popup.key !== key) : state.popupList).concat([\n        {\n          key: key || nanoid(),\n          show: true,\n          content,\n          removeAfterMs\n        }\n      ])\n    })\n    .addCase(removePopup, (state, { payload: { key } }) => {\n      state.popupList.forEach(p => {\n        if (p.key === key) {\n          p.show = false\n        }\n      })\n    })\n)\n"]},"metadata":{},"sourceType":"module"}