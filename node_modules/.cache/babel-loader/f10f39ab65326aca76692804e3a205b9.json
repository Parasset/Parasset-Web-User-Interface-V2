{"ast":null,"code":"//@ts-nocheck\nimport { useCallback, useEffect, useState } from 'react';\nimport useBasisCash from './useBasisCash';\nimport { getTonumber } from '../utils/formatBalance';\n;\n\nconst useAllowance = (token, spender) => {\n  const [allowance, setAllowance] = useState(0);\n  const basisCash = useBasisCash();\n  const fetchAllowance = useCallback(async () => {\n    console.log(token, 'token');\n\n    if (token) {\n      const allowance = await token.allowance(basisCash === null || basisCash === void 0 ? void 0 : basisCash.myAccount, spender);\n      setAllowance(getTonumber(allowance));\n    }\n\n    ;\n  }, [basisCash === null || basisCash === void 0 ? void 0 : basisCash.myAccount, spender, token]);\n  useEffect(() => {\n    const refreshInterval = setInterval(() => {\n      if ((basisCash === null || basisCash === void 0 ? void 0 : basisCash.isUnlocked) && spender && token) {\n        fetchAllowance(); // .catch((err) => console.log(`Failed to fetch allowance: ${err.stack}`));\n      }\n    }, 1000);\n    return () => clearInterval(refreshInterval);\n  }, [basisCash === null || basisCash === void 0 ? void 0 : basisCash.isUnlocked, basisCash === null || basisCash === void 0 ? void 0 : basisCash.myAccount, spender, token]);\n  return allowance;\n};\n\nexport default useAllowance;","map":{"version":3,"sources":["/Users/miczero/ParaAsset/src/hooks/useAllowance.ts"],"names":["useCallback","useEffect","useState","useBasisCash","getTonumber","useAllowance","token","spender","allowance","setAllowance","basisCash","fetchAllowance","console","log","myAccount","refreshInterval","setInterval","isUnlocked","clearInterval"],"mappings":"AAAA;AACA,SAASA,WAAT,EAAsBC,SAAtB,EAAiCC,QAAjC,QAAiD,OAAjD;AAEA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA;;AACA,MAAMC,YAAY,GAAG,CAACC,KAAD,EAAaC,OAAb,KAAiC;AACpD,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,CAAD,CAA1C;AACA,QAAMQ,SAAS,GAAGP,YAAY,EAA9B;AACA,QAAMQ,cAAc,GAAGX,WAAW,CAAC,YAAY;AAC7CY,IAAAA,OAAO,CAACC,GAAR,CAAYP,KAAZ,EAAkB,OAAlB;;AACA,QAAGA,KAAH,EAAS;AACP,YAAME,SAAS,GAAG,MAAMF,KAAK,CAACE,SAAN,CAAgBE,SAAhB,aAAgBA,SAAhB,uBAAgBA,SAAS,CAAEI,SAA3B,EAAsCP,OAAtC,CAAxB;AACAE,MAAAA,YAAY,CAACL,WAAW,CAACI,SAAD,CAAZ,CAAZ;AACD;;AACF;AACA,GAPiC,EAO/B,CAACE,SAAD,aAACA,SAAD,uBAACA,SAAS,CAAEI,SAAZ,EAAuBP,OAAvB,EAAgCD,KAAhC,CAP+B,CAAlC;AASAL,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMc,eAAe,GAAGC,WAAW,CAAC,MAAM;AACxC,UAAI,CAAAN,SAAS,SAAT,IAAAA,SAAS,WAAT,YAAAA,SAAS,CAAEO,UAAX,KAAyBV,OAAzB,IAAoCD,KAAxC,EAA+C;AAC7CK,QAAAA,cAAc,GAD+B,CAE7C;AACD;AACF,KALkC,EAKhC,IALgC,CAAnC;AAMA,WAAO,MAAMO,aAAa,CAACH,eAAD,CAA1B;AACD,GARQ,EAQN,CAACL,SAAD,aAACA,SAAD,uBAACA,SAAS,CAAEO,UAAZ,EAAwBP,SAAxB,aAAwBA,SAAxB,uBAAwBA,SAAS,CAAEI,SAAnC,EAA6CP,OAA7C,EAAsDD,KAAtD,CARM,CAAT;AAUA,SAAOE,SAAP;AACD,CAvBD;;AAyBA,eAAeH,YAAf","sourcesContent":["//@ts-nocheck\nimport { useCallback, useEffect, useState } from 'react';\n\nimport useBasisCash from './useBasisCash'\nimport { getTonumber } from '../utils/formatBalance';\n;\nconst useAllowance = (token: any, spender: string) => {\n  const [allowance, setAllowance] = useState(0);\n  const basisCash = useBasisCash()\n  const fetchAllowance = useCallback(async () => {\n    console.log(token,'token')\n    if(token){\n      const allowance = await token.allowance(basisCash?.myAccount, spender);\n      setAllowance(getTonumber(allowance))\n    }\n   ;\n  }, [basisCash?.myAccount, spender, token]);\n\n  useEffect(() => {\n    const refreshInterval = setInterval(() => {\n      if (basisCash?.isUnlocked && spender && token) {\n        fetchAllowance()\n        // .catch((err) => console.log(`Failed to fetch allowance: ${err.stack}`));\n      }\n    }, 1000);\n    return () => clearInterval(refreshInterval);\n  }, [basisCash?.isUnlocked, basisCash?.myAccount,spender, token]);\n\n  return allowance;\n};\n\nexport default useAllowance;\n"]},"metadata":{},"sourceType":"module"}