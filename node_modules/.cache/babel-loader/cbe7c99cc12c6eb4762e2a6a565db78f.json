{"ast":null,"code":"import { useCallback } from 'react';\nimport useBasisCash from './useBasisCash';\nimport useHandleTransactionReceipt from './useHandleTransactionReceipt';\nimport { useTranslation } from 'react-i18next';\n\nconst useHarvest = bank => {\n  const basisCash = useBasisCash();\n  const handleTransactionReceipt = useHandleTransactionReceipt();\n  const {\n    t\n  } = useTranslation();\n  const handleReward = useCallback(() => {\n    handleTransactionReceipt(basisCash.harvest(bank.contract), t('shengming', {\n      label: bank.earnTokenName,\n      label1: bank.contract\n    }));\n  }, [bank, basisCash]);\n  return {\n    onReward: handleReward\n  };\n};\n\nexport default useHarvest;","map":{"version":3,"sources":["/Users/miczero/ParaAsset/src/hooks/useHarvest.ts"],"names":["useCallback","useBasisCash","useHandleTransactionReceipt","useTranslation","useHarvest","bank","basisCash","handleTransactionReceipt","t","handleReward","harvest","contract","label","earnTokenName","label1","onReward"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,2BAAP,MAAwC,+BAAxC;AAEA,SAASC,cAAT,QAA+B,eAA/B;;AACA,MAAMC,UAAU,GAAIC,IAAD,IAAgB;AACjC,QAAMC,SAAS,GAAGL,YAAY,EAA9B;AACA,QAAMM,wBAAwB,GAAGL,2BAA2B,EAA5D;AACA,QAAM;AAAEM,IAAAA;AAAF,MAAQL,cAAc,EAA5B;AACA,QAAMM,YAAY,GAAGT,WAAW,CAAC,MAAM;AACrCO,IAAAA,wBAAwB,CACtBD,SAAS,CAACI,OAAV,CAAkBL,IAAI,CAACM,QAAvB,CADsB,EAEtBH,CAAC,CAAC,WAAD,EAAa;AACZI,MAAAA,KAAK,EAACP,IAAI,CAACQ,aADC;AAEZC,MAAAA,MAAM,EAACT,IAAI,CAACM;AAFA,KAAb,CAFqB,CAAxB;AAOD,GAR+B,EAQ7B,CAACN,IAAD,EAAOC,SAAP,CAR6B,CAAhC;AAUA,SAAO;AAAES,IAAAA,QAAQ,EAAEN;AAAZ,GAAP;AACD,CAfD;;AAiBA,eAAeL,UAAf","sourcesContent":["import { useCallback } from 'react';\nimport useBasisCash from './useBasisCash';\nimport useHandleTransactionReceipt from './useHandleTransactionReceipt';\nimport { Bank } from '../basis-cash';\nimport { useTranslation } from 'react-i18next'\nconst useHarvest = (bank: Bank) => {\n  const basisCash = useBasisCash();\n  const handleTransactionReceipt = useHandleTransactionReceipt();\n  const { t } = useTranslation()\n  const handleReward = useCallback(() => {\n    handleTransactionReceipt(\n      basisCash.harvest(bank.contract),\n      t('shengming',{\n        label:bank.earnTokenName,\n        label1:bank.contract,\n      }),\n    );\n  }, [bank, basisCash]);\n\n  return { onReward: handleReward };\n};\n\nexport default useHarvest;\n"]},"metadata":{},"sourceType":"module"}