{"ast":null,"code":"var _jsxFileName = \"/Users/miczero/ParaAsset/src/components/Page/components/Nav.tsx\";\n//@ts-nocheck\nimport React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useWallet } from \"use-wallet\";\nimport Spacer from \"../../Spacer\";\nimport Button from \"../../Button\";\nimport NavBar from \"../../TopBar/components/NavBar\";\nimport Lang from \"../../TopBar/components/Lang\";\nimport Version from \"../../TopBar/components/Version\";\nimport useEncryptAddress from \"../../hooks/useEncryptAddress\";\n\nconst Nav = ({\n  onShowWallet\n}) => {\n  const {\n    account,\n    connect\n  } = useWallet();\n  const {\n    t\n  } = useTranslation();\n  const newAccount = useEncryptAddress(account);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(NavBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Spacer, {\n    size: \"mmd\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    text: !account ? t(\"ljqb\") : newAccount,\n    variant: \"secondary\",\n    onClick: () => {\n      setOpen(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Spacer, {\n    size: \"mmd\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Version, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Lang, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Nav;","map":{"version":3,"sources":["/Users/miczero/ParaAsset/src/components/Page/components/Nav.tsx"],"names":["React","useTranslation","useWallet","Spacer","Button","NavBar","Lang","Version","useEncryptAddress","Nav","onShowWallet","account","connect","t","newAccount","setOpen"],"mappings":";AAAA;AACA,OAAOA,KAAP,MAAiE,OAAjE;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,IAAP,MAAiB,8BAAjB;AACA,OAAOC,OAAP,MAAoB,iCAApB;AACA,OAAOC,iBAAP,MAA8B,+BAA9B;;AACA,MAAMC,GAAa,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAoB;AACxC,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAuBV,SAAS,EAAtC;AACA,QAAM;AAAEW,IAAAA;AAAF,MAAQZ,cAAc,EAA5B;AACA,QAAMa,UAAU,GAAGN,iBAAiB,CAACG,OAAD,CAApC;AACA,sBACE,uDACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE,oBAAC,MAAD;AAAS,IAAA,IAAI,EAAE,CAACA,OAAD,GAAWE,CAAC,CAAC,MAAD,CAAZ,GAAuBC,UAAtC;AAAmD,IAAA,OAAO,EAAC,WAA3D;AACE,IAAA,OAAO,EAAE,MAAM;AACbC,MAAAA,OAAO,CAAC,IAAD,CAAP;AACD,KAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,eAOE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,eAQE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,eASE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CADF;AAaD,CAjBD;;AAmBA,eAAeN,GAAf","sourcesContent":["//@ts-nocheck\nimport React, { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useWallet } from \"use-wallet\";\nimport Spacer from \"../../Spacer\";\nimport Button from \"../../Button\";\n\nimport NavBar from \"../../TopBar/components/NavBar\";\nimport Lang from \"../../TopBar/components/Lang\";\nimport Version from \"../../TopBar/components/Version\";\nimport useEncryptAddress from \"../../hooks/useEncryptAddress\";\nconst Nav: React.FC = ({onShowWallet}) => {\n  const { account, connect } = useWallet();\n  const { t } = useTranslation();\n  const newAccount = useEncryptAddress(account);\n  return (\n    <>\n      <NavBar />\n      <Spacer size=\"mmd\" />\n      <Button  text={!account ? t(\"ljqb\") : newAccount}  variant=\"secondary\"\n        onClick={() => {\n          setOpen(true);\n        }} />\n      <Spacer size=\"mmd\" />\n      <Version />\n      <Lang />\n    </>\n  );\n};\n\nexport default Nav;\n"]},"metadata":{},"sourceType":"module"}