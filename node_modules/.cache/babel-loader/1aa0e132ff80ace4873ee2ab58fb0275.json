{"ast":null,"code":"var _jsxFileName = \"/Users/miczero/ParaAsset/src/components/TopBar/components/TxButton.tsx\";\n//@ts-nocheck\nimport React, { useMemo } from 'react';\nimport styled from 'styled-components';\nimport { useWallet } from 'use-wallet';\nimport Button from '../../Button';\nimport { useAllTransactions } from '../../../state/transactions/hooks';\nimport useModal from '../../../hooks/useModal';\nimport TxModal from './TxModal';\nimport { useTranslation } from 'react-i18next';\n\nconst TxButton = () => {\n  const {\n    account\n  } = useWallet();\n  const allTransactions = useAllTransactions();\n  const {\n    t\n  } = useTranslation();\n  const pendingTransactions = useMemo(() => Object.values(allTransactions).filter(tx => !tx.receipt).length, [allTransactions]);\n  const [isOpen, onPresentTransactionModal, onDismissTransactionModal] = useModal();\n  return /*#__PURE__*/React.createElement(React.Fragment, null, !!account && /*#__PURE__*/React.createElement(StyledTxButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    size: \"sm\",\n    text: pendingTransactions > 0 ? `${pendingTransactions} ${t('daichuli')}` : `${t('jiaoyi')}`,\n    variant: pendingTransactions > 0 ? 'secondary' : 'default',\n    onClick: () => onPresentTransactionModal(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(TxModal, {\n    onDismiss: () => onDismissTransactionModal(),\n    isOpen: isOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst StyledTxButton = styled.div`\n  margin-right: ${props => props.theme.spacing[4]}px;\n  @media (max-width: 768px) {\n    margin-right: ${props => props.theme.spacing[2]}px;\n  }\n`;\nexport default TxButton;","map":{"version":3,"sources":["/Users/miczero/ParaAsset/src/components/TopBar/components/TxButton.tsx"],"names":["React","useMemo","styled","useWallet","Button","useAllTransactions","useModal","TxModal","useTranslation","TxButton","account","allTransactions","t","pendingTransactions","Object","values","filter","tx","receipt","length","isOpen","onPresentTransactionModal","onDismissTransactionModal","StyledTxButton","div","props","theme","spacing"],"mappings":";AAAA;AACA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAA8BC,kBAA9B,QAAwD,mCAAxD;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,cAAT,QAA+B,eAA/B;;AAIA,MAAMC,QAAiC,GAAG,MAAM;AAC9C,QAAM;AAAEC,IAAAA;AAAF,MAAcP,SAAS,EAA7B;AACA,QAAMQ,eAAe,GAAGN,kBAAkB,EAA1C;AACA,QAAM;AAAEO,IAAAA;AAAF,MAAQJ,cAAc,EAA5B;AACA,QAAMK,mBAAmB,GAAGZ,OAAO,CACjC,MAAMa,MAAM,CAACC,MAAP,CAAcJ,eAAd,EAA+BK,MAA/B,CAAuCC,EAAD,IAAQ,CAACA,EAAE,CAACC,OAAlD,EAA2DC,MADhC,EAEjC,CAACR,eAAD,CAFiC,CAAnC;AAKA,QAAM,CAACS,MAAD,EAASC,yBAAT,EAAoCC,yBAApC,IAAiEhB,QAAQ,EAA/E;AACA,sBACE,0CACG,CAAC,CAACI,OAAF,iBACC,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,IAAI,EAAC,IADP;AAEE,IAAA,IAAI,EACFG,mBAAmB,GAAG,CAAtB,GACK,GAAEA,mBAAoB,IAAGD,CAAC,CAAC,UAAD,CAAa,EAD5C,GAEK,GAAEA,CAAC,CAAC,QAAD,CAAW,EALvB;AAOE,IAAA,OAAO,EAAEC,mBAAmB,GAAG,CAAtB,GAA0B,WAA1B,GAAwC,SAPnD;AAQE,IAAA,OAAO,EAAE,MAAMQ,yBAAyB,EAR1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFJ,eAeE,oBAAC,OAAD;AAAS,IAAA,SAAS,EAAE,MAAMC,yBAAyB,EAAnD;AAAwD,IAAA,MAAM,EAAEF,MAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfF,CADF;AAmBD,CA7BD;;AA+BA,MAAMG,cAAc,GAAGrB,MAAM,CAACsB,GAAI;kBACfC,KAAD,IAAWA,KAAK,CAACC,KAAN,CAAYC,OAAZ,CAAoB,CAApB,CAAuB;;oBAE/BF,KAAD,IAAWA,KAAK,CAACC,KAAN,CAAYC,OAAZ,CAAoB,CAApB,CAAuB;;CAHtD;AAOA,eAAelB,QAAf","sourcesContent":["//@ts-nocheck\nimport React, { useMemo } from 'react';\nimport styled from 'styled-components';\nimport { useWallet } from 'use-wallet';\nimport Button from '../../Button';\nimport { isTransactionRecent, useAllTransactions } from '../../../state/transactions/hooks';\nimport useModal from '../../../hooks/useModal';\nimport TxModal from './TxModal';\nimport { useTranslation } from 'react-i18next';\n\ninterface TxButtonProps {}\n\nconst TxButton: React.FC<TxButtonProps> = () => {\n  const { account } = useWallet();\n  const allTransactions = useAllTransactions();\n  const { t } = useTranslation();\n  const pendingTransactions = useMemo(\n    () => Object.values(allTransactions).filter((tx) => !tx.receipt).length,\n    [allTransactions],\n  );\n\n  const [isOpen, onPresentTransactionModal, onDismissTransactionModal] = useModal();\n  return (\n    <>\n      {!!account && (\n        <StyledTxButton>\n          <Button\n            size=\"sm\"\n            text={\n              pendingTransactions > 0\n                ? `${pendingTransactions} ${t('daichuli')}`\n                : `${t('jiaoyi')}`\n            }\n            variant={pendingTransactions > 0 ? 'secondary' : 'default'}\n            onClick={() => onPresentTransactionModal()}\n          />\n        </StyledTxButton>\n      )}\n      <TxModal onDismiss={() => onDismissTransactionModal()}  isOpen={isOpen}/>\n    </>\n  );\n};\n\nconst StyledTxButton = styled.div`\n  margin-right: ${(props) => props.theme.spacing[4]}px;\n  @media (max-width: 768px) {\n    margin-right: ${(props) => props.theme.spacing[2]}px;\n  }\n`;\n\nexport default TxButton;\n"]},"metadata":{},"sourceType":"module"}