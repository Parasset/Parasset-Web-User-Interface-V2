{"ast":null,"code":"var _jsxFileName = \"/Users/miczero/ParaAsset/src/components/TopBar/components/AccountButton.tsx\";\n//@ts-nocheck\nimport React, { useState, useCallback } from 'react';\nimport styled from 'styled-components';\nimport { useTranslation } from 'react-i18next';\nimport { useWallet } from 'use-wallet';\nimport useModal from '../../../hooks/useModal';\nimport Button from '../../Button';\nimport AccountModal from './AccountModal';\n\nconst AccountButton = props => {\n  const [isOpen1, onPresentAccountModal, onDismiss] = useModal();\n  const {\n    t,\n    i18n\n  } = useTranslation();\n  const {\n    account,\n    connect\n  } = useWallet();\n  const [isOpen, setIsOpen] = useState(false);\n  var toggleDropdown = useCallback(() => {\n    setIsOpen(!isOpen);\n  }, [setIsOpen, isOpen]);\n  const changeLanguage = useCallback(lang => {\n    localStorage.setItem('lang', lang);\n    i18n.changeLanguage(lang);\n  }, [i18n.language]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"position-relative\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(StyledNavItem, {\n    onClick: toggleDropdown,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(StyledIcon, {\n    src: require(`../../../assets/img/yuyan.png`),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }), i18n.language === 'zh' ? t('zhongwen') : t('yingwen'), /*#__PURE__*/React.createElement(\"img\", {\n    width: \"14\",\n    height: \"7\",\n    className: \"margin-left-4\",\n    src: require(`../../../assets/img/jiantou.png`),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  })), isOpen ? /*#__PURE__*/React.createElement(StyledNavBox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(StyledButton, {\n    className: i18n.language === 'zh' ? 'active' : '',\n    onClick: () => {\n      toggleDropdown();\n      changeLanguage('zh');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, t('zhongwen')), /*#__PURE__*/React.createElement(StyledButton, {\n    className: i18n.language === 'en' ? 'active' : '',\n    onClick: () => {\n      toggleDropdown();\n      changeLanguage('en');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, t('yingwen'))) : null), /*#__PURE__*/React.createElement(StyledAccountButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, !account ? /*#__PURE__*/React.createElement(Button, {\n    onClick: () => connect('injected'),\n    size: \"sm\",\n    text: t('jsqb'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }) : /*#__PURE__*/React.createElement(Button, {\n    onClick: onPresentAccountModal,\n    size: \"sm\",\n    text: \"My Wallet\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(AccountModal, {\n    isOpen: isOpen1,\n    onDismiss: onDismiss,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst StyledAccountButton = styled.div``;\nconst StyledNavItem = styled.div`\n  margin-right: 20px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  white-space: nowrap;\n  cursor: pointer;\n  text-decoration: none;\n  color: ${props => props.theme.color.grey[400]};\n  @media (max-width: 768px) {\n    display: none;\n  }\n`;\nconst StyledIcon = styled.img`\n  margin-right: 10px;\n`;\nconst StyledNavBox = styled.div`\n  position: absolute;\n  width: 140px;\n  left: 0;\n  top: 40px;\n  z-index: 888;\n  line-height: 42px;\n  border-radius: 10px;\n  background: ${props => props.theme.color.white};\n  text-align: center;\n  cursor: pointer;\n`;\nconst StyledButton = styled.div`\n  color: ${props => props.theme.color.grey[400]};\n\n  &.active {\n    color: ${props => props.theme.color.primary.main};\n  }\n`;\nexport default AccountButton;","map":{"version":3,"sources":["/Users/miczero/ParaAsset/src/components/TopBar/components/AccountButton.tsx"],"names":["React","useState","useCallback","styled","useTranslation","useWallet","useModal","Button","AccountModal","AccountButton","props","isOpen1","onPresentAccountModal","onDismiss","t","i18n","account","connect","isOpen","setIsOpen","toggleDropdown","changeLanguage","lang","localStorage","setItem","language","require","StyledAccountButton","div","StyledNavItem","theme","color","grey","StyledIcon","img","StyledNavBox","white","StyledButton","primary","main"],"mappings":"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","sourcesContent":["\n//@ts-nocheck\nimport React, { useState, useCallback } from 'react';\nimport styled from 'styled-components';\nimport { useTranslation } from 'react-i18next';\nimport { useWallet } from 'use-wallet';\n\nimport useModal from '../../../hooks/useModal';\n\nimport Button from '../../Button';\n\nimport AccountModal from './AccountModal';\n\ninterface AccountButtonProps {}\n\nconst AccountButton: React.FC<AccountButtonProps> = (props) => {\n  const [isOpen1, onPresentAccountModal, onDismiss] = useModal();\n  const { t, i18n } = useTranslation();\n  const { account, connect } = useWallet();\n  const [isOpen, setIsOpen] = useState(false);\n  var toggleDropdown = useCallback(() => {\n    setIsOpen(!isOpen);\n  }, [setIsOpen, isOpen]);\n\n  const changeLanguage = useCallback(\n    (lang) => {\n      localStorage.setItem('lang', lang);\n      i18n.changeLanguage(lang);\n    },\n    [i18n.language],\n  );\n  return (\n    <>\n      <div className=\"position-relative\">\n        <StyledNavItem onClick={toggleDropdown}>\n          <StyledIcon src={require(`../../../assets/img/yuyan.png`)} />\n\n          {i18n.language === 'zh' ? t('zhongwen') : t('yingwen')}\n          <img\n            width=\"14\"\n            height=\"7\"\n            className=\"margin-left-4\"\n            src={require(`../../../assets/img/jiantou.png`)}\n          />\n        </StyledNavItem>\n        {isOpen ? (\n          <StyledNavBox>\n            <StyledButton\n              className={i18n.language === 'zh' ? 'active' : ''}\n              onClick={() => {\n                toggleDropdown();\n                changeLanguage('zh');\n              }}\n            >\n              {t('zhongwen')}\n            </StyledButton>\n            <StyledButton\n              className={i18n.language === 'en' ? 'active' : ''}\n              onClick={() => {\n                toggleDropdown();\n                changeLanguage('en');\n              }}\n            >\n              {t('yingwen')}\n            </StyledButton>\n          </StyledNavBox>\n        ) : null}\n      </div>\n\n      <StyledAccountButton>\n        {!account ? (\n          <Button onClick={() => connect('injected')} size=\"sm\" text={t('jsqb')} />\n        ) : (\n          <Button onClick={onPresentAccountModal} size=\"sm\" text=\"My Wallet\" />\n        )}\n      </StyledAccountButton>\n      <AccountModal isOpen={isOpen1} onDismiss={onDismiss} />\n    </>\n  );\n};\n\nconst StyledAccountButton = styled.div``;\nconst StyledNavItem = styled.div`\n  margin-right: 20px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  white-space: nowrap;\n  cursor: pointer;\n  text-decoration: none;\n  color: ${(props) => props.theme.color.grey[400]};\n  @media (max-width: 768px) {\n    display: none;\n  }\n`;\nconst StyledIcon = styled.img`\n  margin-right: 10px;\n`;\n\nconst StyledNavBox = styled.div`\n  position: absolute;\n  width: 140px;\n  left: 0;\n  top: 40px;\n  z-index: 888;\n  line-height: 42px;\n  border-radius: 10px;\n  background: ${(props) => props.theme.color.white};\n  text-align: center;\n  cursor: pointer;\n`;\nconst StyledButton = styled.div`\n  color: ${(props) => props.theme.color.grey[400]};\n\n  &.active {\n    color: ${(props) => props.theme.color.primary.main};\n  }\n`;\nexport default AccountButton;\n"]},"metadata":{},"sourceType":"module"}