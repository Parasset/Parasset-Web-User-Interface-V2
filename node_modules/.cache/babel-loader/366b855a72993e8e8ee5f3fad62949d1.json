{"ast":null,"code":"//@ts-nocheck\nimport { createReducer } from '@reduxjs/toolkit';\nimport { updateBlockNumber, toggleStatusModal, updateTransactionHash, toggleStatus } from './actions';\nconst initialState = {\n  blockNumber: {},\n  statusModalOpen: false,\n  status: 1,\n  transactionHash: ''\n};\nexport default createReducer(initialState, builder => builder.addCase(updateBlockNumber, (state, action) => {\n  const {\n    chainId,\n    blockNumber\n  } = action.payload;\n\n  if (typeof state.blockNumber[chainId] !== 'number') {\n    state.blockNumber[chainId] = blockNumber;\n  } else {\n    state.blockNumber[chainId] = Math.max(blockNumber, state.blockNumber[chainId]);\n  }\n}).addCase(toggleStatusModal, (state, action) => {\n  state.statusModalOpen = action.payload.statusModalOpen !== undefined ? action.payload.statusModalOpen : !state.statusModalOpen;\n}).addCase(toggleStatus, (state, action) => {\n  state.status = action.payload.status !== undefined ? action.payload.status : 1;\n}).addCase(updateTransactionHash, (state, action) => {\n  state.transactionHash = action.payload.transactionHash !== undefined ? action.payload.transactionHash : '';\n}));","map":{"version":3,"sources":["/Users/miczero/ParaAsset/src/state/application/reducer.ts"],"names":["createReducer","updateBlockNumber","toggleStatusModal","updateTransactionHash","toggleStatus","initialState","blockNumber","statusModalOpen","status","transactionHash","builder","addCase","state","action","chainId","payload","Math","max","undefined"],"mappings":"AAAA;AACA,SAASA,aAAT,QAAgC,kBAAhC;AACA,SACEC,iBADF,EAEEC,iBAFF,EAGEC,qBAHF,EAIEC,YAJF,QAKO,WALP;AAaA,MAAMC,YAA8B,GAAG;AACrCC,EAAAA,WAAW,EAAE,EADwB;AAErCC,EAAAA,eAAe,EAAE,KAFoB;AAGrCC,EAAAA,MAAM,EAAE,CAH6B;AAIrCC,EAAAA,eAAe,EAAC;AAJqB,CAAvC;AAOA,eAAeT,aAAa,CAACK,YAAD,EAAeK,OAAO,IAChDA,OAAO,CACJC,OADH,CACWV,iBADX,EAC8B,CAACW,KAAD,EAAQC,MAAR,KAAmB;AAC7C,QAAM;AAAEC,IAAAA,OAAF;AAAWR,IAAAA;AAAX,MAA2BO,MAAM,CAACE,OAAxC;;AACA,MAAI,OAAOH,KAAK,CAACN,WAAN,CAAkBQ,OAAlB,CAAP,KAAsC,QAA1C,EAAoD;AAClDF,IAAAA,KAAK,CAACN,WAAN,CAAkBQ,OAAlB,IAA6BR,WAA7B;AACD,GAFD,MAEO;AACLM,IAAAA,KAAK,CAACN,WAAN,CAAkBQ,OAAlB,IAA6BE,IAAI,CAACC,GAAL,CAASX,WAAT,EAAsBM,KAAK,CAACN,WAAN,CAAkBQ,OAAlB,CAAtB,CAA7B;AACD;AACF,CARH,EAUGH,OAVH,CAUWT,iBAVX,EAU8B,CAACU,KAAD,EAAQC,MAAR,KAAmB;AAC7CD,EAAAA,KAAK,CAACL,eAAN,GACEM,MAAM,CAACE,OAAP,CAAeR,eAAf,KAAmCW,SAAnC,GAA+CL,MAAM,CAACE,OAAP,CAAeR,eAA9D,GAAgF,CAACK,KAAK,CAACL,eADzF;AAED,CAbH,EAcGI,OAdH,CAcWP,YAdX,EAcyB,CAACQ,KAAD,EAAQC,MAAR,KAAmB;AACxCD,EAAAA,KAAK,CAACJ,MAAN,GAAeK,MAAM,CAACE,OAAP,CAAeP,MAAf,KAA0BU,SAA1B,GAAsCL,MAAM,CAACE,OAAP,CAAeP,MAArD,GAA8D,CAA7E;AACD,CAhBH,EAiBGG,OAjBH,CAiBWR,qBAjBX,EAiBkC,CAACS,KAAD,EAAQC,MAAR,KAAmB;AACjDD,EAAAA,KAAK,CAACH,eAAN,GACEI,MAAM,CAACE,OAAP,CAAeN,eAAf,KAAmCS,SAAnC,GAA+CL,MAAM,CAACE,OAAP,CAAeN,eAA9D,GAAgF,EADlF;AAED,CApBH,CAD0B,CAA5B","sourcesContent":["//@ts-nocheck\nimport { createReducer,  } from '@reduxjs/toolkit'\nimport {\n  updateBlockNumber,\n  toggleStatusModal,\n  updateTransactionHash,\n  toggleStatus\n} from './actions'\n\n\nexport interface ApplicationState {\n  blockNumber: { [chainId: number]: number }\n  walletModalOpen: boolean\n}\n\nconst initialState: ApplicationState = {\n  blockNumber: {},\n  statusModalOpen: false,\n  status: 1,\n  transactionHash:''\n}\n\nexport default createReducer(initialState, builder =>\n  builder\n    .addCase(updateBlockNumber, (state, action) => {\n      const { chainId, blockNumber } = action.payload\n      if (typeof state.blockNumber[chainId] !== 'number') {\n        state.blockNumber[chainId] = blockNumber\n      } else {\n        state.blockNumber[chainId] = Math.max(blockNumber, state.blockNumber[chainId])\n      }\n    })\n\n    .addCase(toggleStatusModal, (state, action) => {\n      state.statusModalOpen =\n        action.payload.statusModalOpen !== undefined ? action.payload.statusModalOpen : !state.statusModalOpen\n    })\n    .addCase(toggleStatus, (state, action) => {\n      state.status = action.payload.status !== undefined ? action.payload.status : 1\n    })\n    .addCase(updateTransactionHash, (state, action) => {\n      state.transactionHash =\n        action.payload.transactionHash !== undefined ? action.payload.transactionHash : ''\n    })\n  \n   \n)\n"]},"metadata":{},"sourceType":"module"}