{"ast":null,"code":"//@ts-nocheck\nimport BigNumber1 from \"bignumber.js\";\nexport const getNumberToAll = (balance, decimals = 18) => {\n  balance = new BigNumber1(balance.toString());\n  const displayBalance = balance.dividedBy(new BigNumber1(10).pow(decimals));\n  const dp = displayBalance.dp();\n  return displayBalance.toFixed(dp);\n};\nexport const getNumberToMax = (balance, decimals = 18) => {\n  // console.log(\"ðŸš€ ~ file: formatBalance.ts ~ line 10 ~ getNumberToMax ~ balance\", balance)\n  balance = new BigNumber1(balance.toString());\n  const displayBalance = balance.dividedBy(new BigNumber1(10).pow(decimals));\n  var dp = displayBalance.dp();\n  dp = dp > 8 ? 8 : dp;\n  return displayBalance.toFixed(dp);\n};\nexport const getNumberToMax1 = (balance, decimals = 18) => {\n  balance = new BigNumber1(balance.toString());\n  const displayBalance = balance.dividedBy(new BigNumber1(10).pow(decimals));\n  var dp = displayBalance.dp();\n  dp = dp > 3 ? 3 : dp;\n  return displayBalance.toFixed(dp);\n};\nexport const getDisplayNumber = (balance, decimals = 18, fractionDigits = 3) => {\n  balance = new BigNumber1(balance.toString());\n  const displayBalance = balance.dividedBy(new BigNumber1(10).pow(decimals));\n  return displayBalance.toFixed(fractionDigits);\n};\nexport const getTonumber = (balance, decimals = 18) => {\n  balance = new BigNumber1(balance.toString());\n  return balance.dividedBy(new BigNumber1(10).pow(decimals)).toNumber();\n};\nexport const getToBignumber = (balance, decimals = 18) => {\n  balance = new BigNumber1(balance.toString());\n  return balance.dividedBy(new BigNumber1(10).pow(decimals));\n};\nexport const getNoDecimalsTonumber = balance => {\n  return balance.toNumber();\n};","map":{"version":3,"sources":["/Users/miczero/ParaAsset/src/utils/formatBalance.ts"],"names":["BigNumber1","getNumberToAll","balance","decimals","toString","displayBalance","dividedBy","pow","dp","toFixed","getNumberToMax","getNumberToMax1","getDisplayNumber","fractionDigits","getTonumber","toNumber","getToBignumber","getNoDecimalsTonumber"],"mappings":"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","sourcesContent":["//@ts-nocheck\nimport BigNumber1 from \"bignumber.js\";\nexport const getNumberToAll = (balance: any, decimals = 18) => {\n  balance = new BigNumber1(balance.toString());\n  const displayBalance = balance.dividedBy(new BigNumber1(10).pow(decimals));\n  const dp = displayBalance.dp();\n  return displayBalance.toFixed(dp);\n};\n\nexport const getNumberToMax = (balance: any, decimals = 18) => {\n  // console.log(\"ðŸš€ ~ file: formatBalance.ts ~ line 10 ~ getNumberToMax ~ balance\", balance)\n  balance = new BigNumber1(balance.toString());\n  const displayBalance = balance.dividedBy(new BigNumber1(10).pow(decimals));\n  var dp = displayBalance.dp();\n  dp = dp > 8 ? 8 : dp;\n  return displayBalance.toFixed(dp);\n};\nexport const getNumberToMax1 = (balance: any, decimals = 18) => {\n  balance = new BigNumber1(balance.toString());\n  const displayBalance = balance.dividedBy(new BigNumber1(10).pow(decimals));\n  var dp = displayBalance.dp();\n\n  dp = dp > 3 ? 3 : dp;\n  return displayBalance.toFixed(dp);\n};\nexport const getDisplayNumber = (\n  balance: any,\n  decimals = 18,\n  fractionDigits = 3\n) => {\n  balance = new BigNumber1(balance.toString());\n  const displayBalance = balance.dividedBy(new BigNumber1(10).pow(decimals));\n  return displayBalance.toFixed(fractionDigits);\n};\n\nexport const getTonumber = (balance: any, decimals = 18) => {\n  balance = new BigNumber1(balance.toString());\n  return balance.dividedBy(new BigNumber1(10).pow(decimals)).toNumber();\n};\nexport const getToBignumber = (balance: any, decimals = 18) => {\n  balance = new BigNumber1(balance.toString());\n  return balance.dividedBy(new BigNumber1(10).pow(decimals));\n};\n\nexport const getNoDecimalsTonumber = (balance: any) => {\n  return balance.toNumber();\n};\n"]},"metadata":{},"sourceType":"module"}