{"ast":null,"code":"import { useCallback, useEffect, useState } from 'react';\nimport { useWallet } from 'use-wallet';\nimport config from '../config';\n\nconst useAllowance = (token, spender, pendingApproval) => {\n  const [allowance, setAllowance] = useState(null);\n  const {\n    account\n  } = useWallet();\n  const fetchAllowance = useCallback(async () => {\n    const allowance = await token.allowance(account, spender);\n    setAllowance(allowance);\n  }, [account, spender, token]);\n  useEffect(() => {\n    const refreshInterval = setInterval(() => {\n      if (account && spender && token) {\n        fetchAllowance().catch(err => console.log(`Failed to fetch allowance: ${err.stack}`));\n      }\n    }, config.refreshInterval);\n    return () => clearInterval(refreshInterval);\n  }, [account, spender, token, pendingApproval]);\n  return allowance;\n};\n\nexport default useAllowance;","map":{"version":3,"sources":["/Users/miczero/ParaAsset/src/hooks/useAllowance.ts"],"names":["useCallback","useEffect","useState","useWallet","config","useAllowance","token","spender","pendingApproval","allowance","setAllowance","account","fetchAllowance","refreshInterval","setInterval","catch","err","console","log","stack","clearInterval"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,SAAtB,EAAiCC,QAAjC,QAAiD,OAAjD;AACA,SAASC,SAAT,QAA0B,YAA1B;AAGA,OAAOC,MAAP,MAAmB,WAAnB;;AACA,MAAMC,YAAY,GAAG,CAACC,KAAD,EAAeC,OAAf,EAAgCC,eAAhC,KAA8D;AACjF,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAY,IAAZ,CAA1C;AACA,QAAM;AAAES,IAAAA;AAAF,MAAcR,SAAS,EAA7B;AAEA,QAAMS,cAAc,GAAGZ,WAAW,CAAC,YAAY;AAC7C,UAAMS,SAAS,GAAG,MAAMH,KAAK,CAACG,SAAN,CAAgBE,OAAhB,EAAyBJ,OAAzB,CAAxB;AACAG,IAAAA,YAAY,CAACD,SAAD,CAAZ;AACD,GAHiC,EAG/B,CAACE,OAAD,EAAUJ,OAAV,EAAmBD,KAAnB,CAH+B,CAAlC;AAKAL,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMY,eAAe,GAAGC,WAAW,CAAC,MAAM;AACxC,UAAIH,OAAO,IAAIJ,OAAX,IAAsBD,KAA1B,EAAiC;AAC/BM,QAAAA,cAAc,GAAGG,KAAjB,CAAwBC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAa,8BAA6BF,GAAG,CAACG,KAAM,EAApD,CAAhC;AACD;AACF,KAJkC,EAIhCf,MAAM,CAACS,eAJyB,CAAnC;AAKA,WAAO,MAAMO,aAAa,CAACP,eAAD,CAA1B;AACD,GAPQ,EAON,CAACF,OAAD,EAAUJ,OAAV,EAAmBD,KAAnB,EAA0BE,eAA1B,CAPM,CAAT;AASA,SAAOC,SAAP;AACD,CAnBD;;AAqBA,eAAeJ,YAAf","sourcesContent":["import { useCallback, useEffect, useState } from 'react';\nimport { useWallet } from 'use-wallet';\nimport { BigNumber } from 'ethers';\nimport ERC20 from '../basis-cash/ERC20';\nimport config from '../config';\nconst useAllowance = (token: ERC20, spender: string, pendingApproval?: boolean) => {\n  const [allowance, setAllowance] = useState<BigNumber>(null);\n  const { account } = useWallet();\n\n  const fetchAllowance = useCallback(async () => {\n    const allowance = await token.allowance(account, spender);\n    setAllowance(allowance);\n  }, [account, spender, token]);\n\n  useEffect(() => {\n    const refreshInterval = setInterval(() => {\n      if (account && spender && token) {\n        fetchAllowance().catch((err) => console.log(`Failed to fetch allowance: ${err.stack}`));\n      }\n    }, config.refreshInterval);\n    return () => clearInterval(refreshInterval);\n  }, [account, spender, token, pendingApproval]);\n\n  return allowance;\n};\n\nexport default useAllowance;\n"]},"metadata":{},"sourceType":"module"}