{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.N_DIV_2 = exports.isAccessList = exports.isAccessListBuffer = void 0;\n\nvar ethereumjs_util_1 = require(\"ethereumjs-util\");\n\nfunction isAccessListBuffer(input) {\n  if (input.length === 0) {\n    return true;\n  }\n\n  var firstItem = input[0];\n\n  if (Array.isArray(firstItem)) {\n    return true;\n  }\n\n  return false;\n}\n\nexports.isAccessListBuffer = isAccessListBuffer;\n\nfunction isAccessList(input) {\n  return !isAccessListBuffer(input); // This is exactly the same method, except the output is negated.\n}\n\nexports.isAccessList = isAccessList;\n/**\n * A const defining secp256k1n/2\n */\n\nexports.N_DIV_2 = new ethereumjs_util_1.BN('7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0', 16);","map":{"version":3,"sources":["../src/types.ts"],"names":[],"mappings":";;;;;;;AAAA,IAAA,iBAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;;AAkDA,SAAgB,kBAAhB,CACE,KADF,EACsC;AAEpC,MAAI,KAAK,CAAC,MAAN,KAAiB,CAArB,EAAwB;AACtB,WAAO,IAAP;AACD;;AACD,MAAM,SAAS,GAAG,KAAK,CAAC,CAAD,CAAvB;;AACA,MAAI,KAAK,CAAC,OAAN,CAAc,SAAd,CAAJ,EAA8B;AAC5B,WAAO,IAAP;AACD;;AACD,SAAO,KAAP;AACD;;AAXD,OAAA,CAAA,kBAAA,GAAA,kBAAA;;AAaA,SAAgB,YAAhB,CAA6B,KAA7B,EAAiE;AAC/D,SAAO,CAAC,kBAAkB,CAAC,KAAD,CAA1B,CAD+D,CAC7B;AACnC;;AAFD,OAAA,CAAA,YAAA,GAAA,YAAA;AA2KA;;;;AAGa,OAAA,CAAA,OAAA,GAAU,IAAI,iBAAA,CAAA,EAAJ,CACrB,kEADqB,EAErB,EAFqB,CAAV","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.N_DIV_2 = exports.isAccessList = exports.isAccessListBuffer = void 0;\nvar ethereumjs_util_1 = require(\"ethereumjs-util\");\nfunction isAccessListBuffer(input) {\n    if (input.length === 0) {\n        return true;\n    }\n    var firstItem = input[0];\n    if (Array.isArray(firstItem)) {\n        return true;\n    }\n    return false;\n}\nexports.isAccessListBuffer = isAccessListBuffer;\nfunction isAccessList(input) {\n    return !isAccessListBuffer(input); // This is exactly the same method, except the output is negated.\n}\nexports.isAccessList = isAccessList;\n/**\n * A const defining secp256k1n/2\n */\nexports.N_DIV_2 = new ethereumjs_util_1.BN('7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0', 16);\n//# sourceMappingURL=types.js.map"]},"metadata":{},"sourceType":"script"}