{"ast":null,"code":"var _jsxFileName = \"/Users/miczero/ParaAsset/src/components/Dial/Dial.tsx\";\nimport React, { useContext } from 'react';\nimport styled, { ThemeContext } from 'styled-components';\nimport { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\n\nconst Dial = ({\n  children,\n  disabled,\n  size = 256,\n  value\n}) => {\n  const {\n    color\n  } = useContext(ThemeContext);\n  return /*#__PURE__*/React.createElement(StyledDial, {\n    size: size,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(StyledOuter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CircularProgressbar, {\n    value: value,\n    styles: buildStyles({\n      strokeLinecap: 'round',\n      pathColor: !disabled ? '#7FF15C' : color.grey[400],\n      pathTransitionDuration: 1\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(StyledInner, {\n    size: size,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, children));\n};\n\nconst StyledDial = styled.div`\n  padding: 24px;\n  position: relative;\n  height: ${props => props.size}px;\n  width: ${props => props.size}px;\n`;\nconst StyledInner = styled.div`\n  align-items: center;\n  background-color: #271C20;\n  border-radius: ${props => props.size}px;\n  display: flex;\n  justify-content: center;\n  position: relative;\n  height: ${props => props.size}px;\n  width: ${props => props.size}px;\n`;\nconst StyledOuter = styled.div`\n  background-color: #000;\n  border-radius: 10000px;\n  position: absolute;\n  top: 0; right: 0; bottom: 0; left: 0;\n`;\nexport default Dial;","map":{"version":3,"sources":["/Users/miczero/ParaAsset/src/components/Dial/Dial.tsx"],"names":["React","useContext","styled","ThemeContext","CircularProgressbar","buildStyles","Dial","children","disabled","size","value","color","strokeLinecap","pathColor","grey","pathTransitionDuration","StyledDial","div","props","StyledInner","StyledOuter"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,MAAP,IAAiBC,YAAjB,QAAqC,mBAArC;AAEA,SAASC,mBAAT,EAA8BC,WAA9B,QAAiD,4BAAjD;;AASA,MAAMC,IAAyB,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,QAAZ;AAAsBC,EAAAA,IAAI,GAAG,GAA7B;AAAkCC,EAAAA;AAAlC,CAAD,KAA+C;AAC/E,QAAM;AAAEC,IAAAA;AAAF,MAAYV,UAAU,CAACE,YAAD,CAA5B;AAEA,sBACE,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAEM,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,mBAAD;AACE,IAAA,KAAK,EAAEC,KADT;AAEE,IAAA,MAAM,EAAEL,WAAW,CAAC;AAClBO,MAAAA,aAAa,EAAE,OADG;AAElBC,MAAAA,SAAS,EAAE,CAACL,QAAD,GAAY,SAAZ,GAAwBG,KAAK,CAACG,IAAN,CAAW,GAAX,CAFjB;AAGlBC,MAAAA,sBAAsB,EAAE;AAHN,KAAD,CAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAWE,oBAAC,WAAD;AAAa,IAAA,IAAI,EAAEN,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,QADH,CAXF,CADF;AAiBD,CApBD;;AA0BA,MAAMS,UAAU,GAAGd,MAAM,CAACe,GAAsB;;;YAGpCC,KAAK,IAAIA,KAAK,CAACT,IAAK;WACrBS,KAAK,IAAIA,KAAK,CAACT,IAAK;CAJ/B;AAOA,MAAMU,WAAW,GAAGjB,MAAM,CAACe,GAAsB;;;mBAG9BC,KAAK,IAAIA,KAAK,CAACT,IAAK;;;;YAI3BS,KAAK,IAAIA,KAAK,CAACT,IAAK;WACrBS,KAAK,IAAIA,KAAK,CAACT,IAAK;CAR/B;AAWA,MAAMW,WAAW,GAAGlB,MAAM,CAACe,GAAI;;;;;CAA/B;AAOA,eAAeX,IAAf","sourcesContent":["import React, { useContext } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\n\nimport { CircularProgressbar, buildStyles } from 'react-circular-progressbar'\n\ninterface DialProps {\n  children?: React.ReactNode,\n  disabled?: boolean,\n  size?: number,\n  value: number\n}\n\nconst Dial: React.FC<DialProps> = ({ children, disabled, size = 256, value }) => {\n  const { color } = useContext(ThemeContext)\n\n  return (\n    <StyledDial size={size}>\n      <StyledOuter>\n        <CircularProgressbar\n          value={value}\n          styles={buildStyles({\n            strokeLinecap: 'round',\n            pathColor: !disabled ? '#7FF15C' : color.grey[400],\n            pathTransitionDuration: 1,\n          })}\n        />\n      </StyledOuter>\n      <StyledInner size={size}>\n        {children}\n      </StyledInner>\n    </StyledDial>\n  )\n}\n\ninterface StyledInnerProps {\n  size: number\n}\n\nconst StyledDial = styled.div<StyledInnerProps>`\n  padding: 24px;\n  position: relative;\n  height: ${props => props.size}px;\n  width: ${props => props.size}px;\n`\n\nconst StyledInner = styled.div<StyledInnerProps>`\n  align-items: center;\n  background-color: #271C20;\n  border-radius: ${props => props.size}px;\n  display: flex;\n  justify-content: center;\n  position: relative;\n  height: ${props => props.size}px;\n  width: ${props => props.size}px;\n`\n\nconst StyledOuter = styled.div`\n  background-color: #000;\n  border-radius: 10000px;\n  position: absolute;\n  top: 0; right: 0; bottom: 0; left: 0;\n`\n\nexport default Dial"]},"metadata":{},"sourceType":"module"}