{"ast":null,"code":"var _jsxFileName = \"/Users/miczero/ParaAsset/src/views/MinePool/MinePool.tsx\";\n//@ts-nocheck\nimport React, { useMemo, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useParams } from \"react-router-dom\";\nimport useIsMobile from \"../../hooks/useIsMobile\";\nimport { getNumberToMax, getNumberToAll } from \"../../utils/formatBalance\";\nimport Back from \"../../components/Back\";\nimport Info from \"./components/Info\";\nimport Harvest from \"./components/Harvest\";\nimport Stake from \"./components/Stake\";\nimport BtnLink from \"../../components/BtnLink\";\nimport Spacer from \"../../components/Spacer\";\nimport useMine from \"../../hooks/useMine\";\nimport useMineInfo from \"../../hooks/useMineInfo\";\nimport OperatModal from \"./components/OperatModal\";\n\nconst Mine = () => {\n  const [select, setSelect] = useState(1);\n  const [isOpen, setIsOpen] = useState(false);\n  const isMobile = useIsMobile();\n  const {\n    t\n  } = useTranslation();\n  const {\n    mineId\n  } = useParams();\n  const mine = useMine(mineId);\n  const mineInfo = useMineInfo(mine);\n  const displayStakeBalance = useMemo(() => getNumberToMax(mineInfo.staked), [mineInfo.staked]);\n  const displayStakeBalance1 = useMemo(() => getNumberToAll(mineInfo.staked), [mineInfo.staked]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Back, {\n    text: `${mine === null || mine === void 0 ? void 0 : mine.name} LP ${t(\"kuangchi\")} `,\n    img: mine.icon1,\n    img1: mine.icon2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Info, {\n    mine: mine,\n    mineInfo: mineInfo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: ` ${isMobile ? \"\" : \"flex-jc-center width-100\"} `,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Harvest, {\n    mine: mine,\n    mineInfo: mineInfo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }), isMobile ? /*#__PURE__*/React.createElement(Spacer, {\n    size: \"mmd\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  }) : null, /*#__PURE__*/React.createElement(Stake, {\n    mine: mine,\n    mineInfo: mineInfo,\n    staked: displayStakeBalance,\n    staked1: displayStakeBalance1,\n    onSelect: el => {\n      setSelect(el);\n    },\n    onOpenModal: () => setIsOpen(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(BtnLink, {\n    text: ` ${t(\"hq\")} ${mine.depositTokenName}`,\n    path: `/itank/detail/${mine.depositContract}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(OperatModal, {\n    isOpen: isOpen,\n    mine: mine,\n    mineInfo: mineInfo,\n    onDismiss: () => setIsOpen(false),\n    select: select,\n    key: select + isOpen // depositBalance={depositBalance}\n    ,\n    stakeBalance: displayStakeBalance1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Mine;","map":{"version":3,"sources":["/Users/miczero/ParaAsset/src/views/MinePool/MinePool.tsx"],"names":["React","useMemo","useState","useTranslation","useParams","useIsMobile","getNumberToMax","getNumberToAll","Back","Info","Harvest","Stake","BtnLink","Spacer","useMine","useMineInfo","OperatModal","Mine","select","setSelect","isOpen","setIsOpen","isMobile","t","mineId","mine","mineInfo","displayStakeBalance","staked","displayStakeBalance1","name","icon1","icon2","el","depositTokenName","depositContract"],"mappings":"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","sourcesContent":["//@ts-nocheck\nimport React, { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useParams } from \"react-router-dom\";\nimport useIsMobile from \"../../hooks/useIsMobile\";\nimport {\n  getNumberToMax,\n  getNumberToAll,\n  getDisplayNumber,\n} from \"../../utils/formatBalance\";\nimport Back from \"../../components/Back\";\nimport Info from \"./components/Info\";\nimport Harvest from \"./components/Harvest\";\nimport Stake from \"./components/Stake\";\nimport BtnLink from \"../../components/BtnLink\";\nimport Spacer from \"../../components/Spacer\";\nimport useMine from \"../../hooks/useMine\";\nimport useMineInfo from \"../../hooks/useMineInfo\";\nimport OperatModal from \"./components/OperatModal\";\nconst Mine: React.FC = () => {\n  const [select, setSelect] = useState(1);\n  const [isOpen, setIsOpen] = useState(false);\n  const isMobile = useIsMobile();\n  const { t } = useTranslation();\n  const { mineId } = useParams();\n  const mine = useMine(mineId);\n  const mineInfo = useMineInfo(mine);\n  const displayStakeBalance = useMemo(() => getNumberToMax(mineInfo.staked), [\n    mineInfo.staked,\n  ]);\n  const displayStakeBalance1 = useMemo(() => getNumberToAll(mineInfo.staked), [\n    mineInfo.staked,\n  ]);\n\n  return (\n    <>\n      <Back\n        text={`${mine?.name} LP ${t(\"kuangchi\")} `}\n        img={mine.icon1}\n        img1={mine.icon2}\n      />\n      <Info mine={mine} mineInfo={mineInfo} />\n      <div className={` ${isMobile ? \"\" : \"flex-jc-center width-100\"} `}>\n        <Harvest mine={mine} mineInfo={mineInfo} />\n        {isMobile ? <Spacer size=\"mmd\" /> : null}\n        <Stake\n          mine={mine}\n          mineInfo={mineInfo}\n          staked={displayStakeBalance}\n          staked1={displayStakeBalance1}\n          onSelect={el => {\n            setSelect(el)\n          }}\n          onOpenModal={() => setIsOpen(true)}\n        />\n      </div>\n      <BtnLink\n        text={` ${t(\"hq\")} ${mine.depositTokenName}`}\n        path={`/itank/detail/${mine.depositContract}`}\n      />\n      <OperatModal\n        isOpen={isOpen}\n        mine={mine}\n        mineInfo={mineInfo}\n        onDismiss={() => setIsOpen(false)}\n        select={select}\n        key={select + isOpen}\n       \n        // depositBalance={depositBalance}\n        stakeBalance={displayStakeBalance1}\n      />\n    </>\n  );\n};\n\nexport default Mine;\n"]},"metadata":{},"sourceType":"module"}