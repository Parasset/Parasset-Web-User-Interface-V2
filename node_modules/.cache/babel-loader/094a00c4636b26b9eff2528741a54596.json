{"ast":null,"code":"var _jsxFileName = \"/Users/miczero/ParaAsset/src/components/TopBar/components/Transaction.tsx\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport { CheckCircle, Triangle } from 'react-feather';\nimport MiniLoader from '../../MiniLoader';\nimport config from '../../../config';\nimport { RowFixed } from '../../Row';\nconst TransactionWrapper = styled.div`\n  display: flex;\n  height: 30px;\n`;\nconst TransactionStatusText = styled.div`\n  margin-right: 0.5rem;\n  display: flex;\n  align-items: center;\n  :hover {\n    text-decoration: underline;\n  }\n`;\nconst TransactionState = styled.a`\n  flex: 1;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  text-decoration: none !important;\n  border-radius: 0.5rem;\n  padding: 0.25rem 0rem;\n  font-weight: 500;\n  font-size: 0.825rem;\n  color: ${props => props.theme.color.grey[400]};\n`;\nconst IconWrapper = styled.div`\n  color: ${({\n  pending,\n  success,\n  theme\n}) => pending ? theme.primary1 : success ? theme.green1 : theme.red1};\n`;\n\nconst Transaction = ({\n  tx\n}) => {\n  var _tx$receipt, _tx$receipt2;\n\n  const summary = tx.summary;\n  const pending = !tx.receipt;\n  const success = !pending && tx && (((_tx$receipt = tx.receipt) === null || _tx$receipt === void 0 ? void 0 : _tx$receipt.status) === 1 || typeof ((_tx$receipt2 = tx.receipt) === null || _tx$receipt2 === void 0 ? void 0 : _tx$receipt2.status) === 'undefined');\n  return /*#__PURE__*/React.createElement(TransactionWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TransactionState, {\n    href: `${config.etherscanUrl}/tx/${tx.hash}`,\n    target: \"_blank\",\n    pending: pending,\n    success: success,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(RowFixed, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TransactionStatusText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, summary !== null && summary !== void 0 ? summary : tx.hash, \" \\u2197\")), /*#__PURE__*/React.createElement(IconWrapper, {\n    pending: pending,\n    success: success,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, pending ? /*#__PURE__*/React.createElement(MiniLoader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }) : success ? /*#__PURE__*/React.createElement(CheckCircle, {\n    size: \"16\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }) : /*#__PURE__*/React.createElement(Triangle, {\n    size: \"16\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }))));\n};\n\nexport default Transaction;","map":{"version":3,"sources":["/Users/miczero/ParaAsset/src/components/TopBar/components/Transaction.tsx"],"names":["React","styled","CheckCircle","Triangle","MiniLoader","config","RowFixed","TransactionWrapper","div","TransactionStatusText","TransactionState","a","props","theme","color","grey","IconWrapper","pending","success","primary1","green1","red1","Transaction","tx","summary","receipt","status","etherscanUrl","hash"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,eAAtC;AAEA,OAAOC,UAAP,MAAuB,kBAAvB;AAEA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,SAASC,QAAT,QAAyB,WAAzB;AAEA,MAAMC,kBAAkB,GAAGN,MAAM,CAACO,GAAI;;;CAAtC;AAKA,MAAMC,qBAAqB,GAAGR,MAAM,CAACO,GAAI;;;;;;;CAAzC;AASA,MAAME,gBAAgB,GAAGT,MAAM,CAACU,CAA2C;;;;;;;;;;WAU/DC,KAAD,IAAWA,KAAK,CAACC,KAAN,CAAYC,KAAZ,CAAkBC,IAAlB,CAAuB,GAAvB,CAA4B;CAVlD;AAaA,MAAMC,WAAW,GAAGf,MAAM,CAACO,GAA6C;WAC7D,CAAC;AAAES,EAAAA,OAAF;AAAWC,EAAAA,OAAX;AAAoBL,EAAAA;AAApB,CAAD,KACPI,OAAO,GAAGJ,KAAK,CAACM,QAAT,GAAoBD,OAAO,GAAGL,KAAK,CAACO,MAAT,GAAkBP,KAAK,CAACQ,IAAK;CAFnE;;AASA,MAAMC,WAAuC,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAY;AAAA;;AAC1D,QAAMC,OAAO,GAAGD,EAAE,CAACC,OAAnB;AACA,QAAMP,OAAO,GAAG,CAACM,EAAE,CAACE,OAApB;AACA,QAAMP,OAAO,GACX,CAACD,OAAD,IAAYM,EAAZ,KAAmB,gBAAAA,EAAE,CAACE,OAAH,4DAAYC,MAAZ,MAAuB,CAAvB,IAA4B,wBAAOH,EAAE,CAACE,OAAV,iDAAO,aAAYC,MAAnB,MAA8B,WAA7E,CADF;AAGA,sBACE,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,gBAAD;AACE,IAAA,IAAI,EAAG,GAAErB,MAAM,CAACsB,YAAa,OAAMJ,EAAE,CAACK,IAAK,EAD7C;AAEE,IAAA,MAAM,EAAC,QAFT;AAGE,IAAA,OAAO,EAAEX,OAHX;AAIE,IAAA,OAAO,EAAEC,OAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,qBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwBM,OAAxB,aAAwBA,OAAxB,cAAwBA,OAAxB,GAAmCD,EAAE,CAACK,IAAtC,YADF,CANF,eASE,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAEX,OAAtB;AAA+B,IAAA,OAAO,EAAEC,OAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,OAAO,gBACN,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADM,GAEJC,OAAO,gBACT,oBAAC,WAAD;AAAa,IAAA,IAAI,EAAC,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADS,gBAGT,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,CATF,CADF,CADF;AAuBD,CA7BD;;AA+BA,eAAeI,WAAf","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { CheckCircle, Triangle } from 'react-feather';\n\nimport MiniLoader from '../../MiniLoader';\nimport { TransactionDetails } from '../../../state/transactions/reducer';\nimport config from '../../../config';\nimport { RowFixed } from '../../Row';\n\nconst TransactionWrapper = styled.div`\n  display: flex;\n  height: 30px;\n`;\n\nconst TransactionStatusText = styled.div`\n  margin-right: 0.5rem;\n  display: flex;\n  align-items: center;\n  :hover {\n    text-decoration: underline;\n  }\n`;\n\nconst TransactionState = styled.a<{ pending: boolean; success?: boolean }>`\n  flex: 1;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  text-decoration: none !important;\n  border-radius: 0.5rem;\n  padding: 0.25rem 0rem;\n  font-weight: 500;\n  font-size: 0.825rem;\n  color: ${(props) => props.theme.color.grey[400]};\n`;\n\nconst IconWrapper = styled.div<{ pending: boolean; success?: boolean }>`\n  color: ${({ pending, success, theme }) =>\n    pending ? theme.primary1 : success ? theme.green1 : theme.red1};\n`;\n\ninterface TransactionProps {\n  tx: TransactionDetails;\n}\n\nconst Transaction: React.FC<TransactionProps> = ({ tx }) => {\n  const summary = tx.summary;\n  const pending = !tx.receipt;\n  const success =\n    !pending && tx && (tx.receipt?.status === 1 || typeof tx.receipt?.status === 'undefined');\n\n  return (\n    <TransactionWrapper>\n      <TransactionState\n        href={`${config.etherscanUrl}/tx/${tx.hash}`}\n        target=\"_blank\"\n        pending={pending}\n        success={success}\n      >\n        <RowFixed>\n          <TransactionStatusText>{summary ?? tx.hash} â†—</TransactionStatusText>\n        </RowFixed>\n        <IconWrapper pending={pending} success={success}>\n          {pending ? (\n            <MiniLoader />\n          ) : success ? (\n            <CheckCircle size=\"16\" />\n          ) : (\n            <Triangle size=\"16\" />\n          )}\n        </IconWrapper>\n      </TransactionState>\n    </TransactionWrapper>\n  );\n};\n\nexport default Transaction;\n"]},"metadata":{},"sourceType":"module"}