{"ast":null,"code":"var _jsxFileName = \"/Users/miczero/ParaAsset/src/components/Button/Button.tsx\";\nimport React, { useContext, useMemo } from 'react';\nimport styled, { ThemeContext } from 'styled-components';\nimport btn_bg from '../../assets/img/btn_bg.png';\nimport { Link } from 'react-router-dom';\n\nconst Button = ({\n  children,\n  disabled,\n  href,\n  onClick,\n  size,\n  text,\n  to,\n  variant,\n  className,\n  width\n}) => {\n  const {\n    color,\n    spacing\n  } = useContext(ThemeContext);\n  let buttonColor;\n\n  switch (variant) {\n    case 'tertiary':\n      buttonColor = color.teal[200];\n      break;\n\n    case 'default':\n    default:\n      buttonColor = color.black;\n  }\n\n  let boxShadow;\n  let buttonSize;\n  let buttonPadding;\n  let fontSize;\n\n  switch (size) {\n    case 'sm':\n      buttonPadding = spacing[2];\n      buttonSize = 30;\n      fontSize = 12;\n      break;\n\n    case 'lg':\n      buttonPadding = spacing[4];\n      buttonSize = 50;\n      fontSize = 16;\n      break;\n\n    case 'md':\n    default:\n      buttonPadding = spacing[3];\n      buttonSize = 50;\n      fontSize = 14;\n  }\n\n  const ButtonChild = useMemo(() => {\n    if (to) {\n      return /*#__PURE__*/React.createElement(StyledLink, {\n        to: to,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 14\n        }\n      }, text);\n    } else if (href) {\n      return /*#__PURE__*/React.createElement(StyledExternalLink, {\n        href: href,\n        target: \"__blank\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 9\n        }\n      }, text);\n    } else {\n      return text;\n    }\n  }, [href, text, to]);\n  return /*#__PURE__*/React.createElement(StyledButton, {\n    boxShadow: boxShadow,\n    color: buttonColor,\n    disabled: disabled,\n    fontSize: fontSize,\n    onClick: onClick,\n    padding: buttonPadding,\n    size: buttonSize,\n    className: className,\n    variant: variant,\n    width: width,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }, children, ButtonChild);\n};\n\nconst StyledButton = styled.button`\n  align-items: center;\n  background-color: ${props => props.theme.color.black};\n  border: 0;\n  border-radius: 5px;\n  background-image: ${props => props.variant === 'secondary' ? 'url(' + btn_bg + ')' : props.variant === 'fourthly' ? 'linear-gradient(0deg, #FDEEA5, #A36328)' : 'none'};\n  background-repeat: no-repeat;\n  background-size: 100% 100%;\n  color: ${props => !props.disabled ? props.color : `${props.color}`};\n  cursor: pointer;\n  display: flex;\n  font-size: ${props => props.fontSize}px;\n  border: ${props => props.variant === 'tertiary' ? '1px' : '0px'} solid\n    ${props => props.theme.color.teal[300]};\n  height: ${props => props.size}px;\n  justify-content: center;\n  outline: none;\n  padding-left: ${props => props.padding}px;\n  padding-right: ${props => props.padding}px;\n  pointer-events: ${props => !props.disabled ? undefined : 'none'};\n  width: ${props => props.width ? props.width : '100%'};\n  opacity: ${props => !props.disabled ? 1 : 0.6};\n \n \n`;\nconst StyledLink = styled(Link)`\n  align-items: center;\n  color: inherit;\n  display: flex;\n  flex: 1;\n  height: 56px;\n  justify-content: center;\n  margin: 0 ${props => -props.theme.spacing[4]}px;\n  padding: 0 ${props => props.theme.spacing[4]}px;\n  text-decoration: none;\n`;\nconst StyledExternalLink = styled.a`\n  align-items: center;\n  color: inherit;\n  display: flex;\n  flex: 1;\n  height: 56px;\n  justify-content: center;\n  margin: 0 ${props => -props.theme.spacing[4]}px;\n  padding: 0 ${props => props.theme.spacing[4]}px;\n  text-decoration: none;\n`;\nexport default Button;","map":{"version":3,"sources":["/Users/miczero/ParaAsset/src/components/Button/Button.tsx"],"names":["React","useContext","useMemo","styled","ThemeContext","btn_bg","Link","Button","children","disabled","href","onClick","size","text","to","variant","className","width","color","spacing","buttonColor","teal","black","boxShadow","buttonSize","buttonPadding","fontSize","ButtonChild","StyledButton","button","props","theme","padding","undefined","StyledLink","StyledExternalLink","a"],"mappings":"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","sourcesContent":["import React, { useContext, useMemo } from 'react';\nimport styled, { ThemeContext } from 'styled-components';\nimport btn_bg from '../../assets/img/btn_bg.png';\nimport { Link } from 'react-router-dom';\n\ninterface ButtonProps {\n  children?: React.ReactNode;\n  disabled?: boolean;\n  href?: string;\n  onClick?: any;\n  size?: 'sm' | 'md' | 'lg';\n  text?: string;\n  to?: string;\n  className?: string;\n  width?: number | string;\n  variant?: 'default' | 'secondary' | 'tertiary' | 'fourthly';\n}\n\nconst Button: React.FC<ButtonProps> = ({\n  children,\n  disabled,\n  href,\n  onClick,\n  size,\n  text,\n  to,\n  variant,\n  className,\n  width,\n}) => {\n  const { color, spacing } = useContext(ThemeContext);\n\n  let buttonColor: string;\n  switch (variant) {\n    case 'tertiary':\n      buttonColor = color.teal[200];\n      break;\n    case 'default':\n    default:\n      buttonColor = color.black;\n  }\n\n  let boxShadow: string;\n  let buttonSize: number;\n  let buttonPadding: number;\n  let fontSize: number;\n  switch (size) {\n    case 'sm':\n      buttonPadding = spacing[2];\n      buttonSize = 30;\n      fontSize = 12;\n      break;\n    case 'lg':\n      buttonPadding = spacing[4];\n      buttonSize = 50;\n      fontSize = 16;\n      break;\n    case 'md':\n    default:\n      buttonPadding = spacing[3];\n      buttonSize = 50;\n      fontSize = 14;\n  }\n\n  const ButtonChild = useMemo(() => {\n    if (to) {\n      return <StyledLink to={to}>{text}</StyledLink>;\n    } else if (href) {\n      return (\n        <StyledExternalLink href={href} target=\"__blank\">\n          {text}\n        </StyledExternalLink>\n      );\n    } else {\n      return text;\n    }\n  }, [href, text, to]);\n\n  return (\n    <StyledButton\n      boxShadow={boxShadow}\n      color={buttonColor}\n      disabled={disabled}\n      fontSize={fontSize}\n      onClick={onClick}\n      padding={buttonPadding}\n      size={buttonSize}\n      className={className}\n      variant={variant}\n      width={width}\n    >\n      {children}\n      {ButtonChild}\n    </StyledButton>\n  );\n};\n\ninterface StyledButtonProps {\n  boxShadow: string;\n  color: string;\n  disabled?: boolean;\n  fontSize: number;\n  padding: number;\n  size: number;\n  variant?: string;\n  width?: number | string;\n}\n\nconst StyledButton = styled.button<StyledButtonProps>`\n  align-items: center;\n  background-color: ${(props) => props.theme.color.black};\n  border: 0;\n  border-radius: 5px;\n  background-image: ${(props) =>\n    props.variant === 'secondary'\n      ? 'url(' + btn_bg + ')'\n      : props.variant === 'fourthly'\n      ? 'linear-gradient(0deg, #FDEEA5, #A36328)'\n      : 'none'};\n  background-repeat: no-repeat;\n  background-size: 100% 100%;\n  color: ${(props) => (!props.disabled ? props.color : `${props.color}`)};\n  cursor: pointer;\n  display: flex;\n  font-size: ${(props) => props.fontSize}px;\n  border: ${(props) => (props.variant === 'tertiary' ? '1px' : '0px')} solid\n    ${(props) => props.theme.color.teal[300]};\n  height: ${(props) => props.size}px;\n  justify-content: center;\n  outline: none;\n  padding-left: ${(props) => props.padding}px;\n  padding-right: ${(props) => props.padding}px;\n  pointer-events: ${(props) => (!props.disabled ? undefined : 'none')};\n  width: ${(props) => (props.width ? props.width : '100%')};\n  opacity: ${(props) => (!props.disabled ? 1 : 0.6)};\n \n \n`;\n\nconst StyledLink = styled(Link)`\n  align-items: center;\n  color: inherit;\n  display: flex;\n  flex: 1;\n  height: 56px;\n  justify-content: center;\n  margin: 0 ${(props) => -props.theme.spacing[4]}px;\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\n  text-decoration: none;\n`;\n\nconst StyledExternalLink = styled.a`\n  align-items: center;\n  color: inherit;\n  display: flex;\n  flex: 1;\n  height: 56px;\n  justify-content: center;\n  margin: 0 ${(props) => -props.theme.spacing[4]}px;\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\n  text-decoration: none;\n`;\n\nexport default Button;\n"]},"metadata":{},"sourceType":"module"}