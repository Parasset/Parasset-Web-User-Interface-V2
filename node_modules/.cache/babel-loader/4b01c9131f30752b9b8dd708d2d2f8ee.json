{"ast":null,"code":"import { Contract } from 'ethers';\nimport { formatUnits } from 'ethers/lib/utils';\n\nclass ERC20 {\n  constructor(address, provider, symbol, decimal = 18) {\n    this.contract = void 0;\n    this.address = void 0;\n    this.symbol = void 0;\n    this.decimal = void 0;\n    this.contract = new Contract(address, ABI, provider);\n    this.address = address;\n    this.symbol = symbol;\n    this.decimal = decimal;\n  }\n\n  connect(signerOrProvider) {\n    this.contract = new Contract(this.address, ABI, signerOrProvider);\n  }\n\n  get estimateGas() {\n    return this.contract.estimateGas;\n  }\n\n  totalSupply() {\n    return this.contract.totalSupply();\n  }\n\n  balanceOf(account) {\n    return this.contract.balanceOf(account);\n  }\n\n  transfer(recipient, amount) {\n    return this.contract.transfer(recipient, amount);\n  }\n\n  allowance(owner, spender) {\n    return this.contract.allowance(owner, spender);\n  }\n\n  approve(spender, amount) {\n    return this.contract.approve(spender, amount);\n  }\n\n  transferFrom(sender, recipient, amount) {\n    return this.contract.transferFro(sender, recipient, amount);\n  }\n\n  async displayedBalanceOf(account) {\n    const balance = await this.balanceOf(account);\n    return formatUnits(balance, this.decimal);\n  }\n\n  async displayedTotalSupply() {\n    const supply = await this.totalSupply();\n    return Number(formatUnits(supply, this.decimal)).toFixed(0);\n  }\n\n}\n\nexport default ERC20;\nconst ABI = [{\n  name: 'Approval',\n  type: 'event',\n  anonymous: false,\n  inputs: [{\n    indexed: true,\n    internalType: 'address',\n    name: 'owner',\n    type: 'address'\n  }, {\n    indexed: true,\n    internalType: 'address',\n    name: 'spender',\n    type: 'address'\n  }, {\n    indexed: false,\n    internalType: 'uint256',\n    name: 'value',\n    type: 'uint256'\n  }]\n}, {\n  anonymous: false,\n  inputs: [{\n    indexed: true,\n    internalType: 'address',\n    name: 'from',\n    type: 'address'\n  }, {\n    indexed: true,\n    internalType: 'address',\n    name: 'to',\n    type: 'address'\n  }, {\n    indexed: false,\n    internalType: 'uint256',\n    name: 'value',\n    type: 'uint256'\n  }],\n  name: 'Transfer',\n  type: 'event'\n}, {\n  constant: true,\n  inputs: [],\n  name: 'totalSupply',\n  outputs: [{\n    internalType: 'uint256',\n    name: '',\n    type: 'uint256'\n  }],\n  payable: false,\n  stateMutability: 'view',\n  type: 'function'\n}, {\n  constant: true,\n  inputs: [{\n    internalType: 'address',\n    name: 'account',\n    type: 'address'\n  }],\n  name: 'balanceOf',\n  outputs: [{\n    internalType: 'uint256',\n    name: '',\n    type: 'uint256'\n  }],\n  payable: false,\n  stateMutability: 'view',\n  type: 'function'\n}, {\n  constant: false,\n  inputs: [{\n    internalType: 'address',\n    name: 'recipient',\n    type: 'address'\n  }, {\n    internalType: 'uint256',\n    name: 'amount',\n    type: 'uint256'\n  }],\n  name: 'transfer',\n  outputs: [{\n    internalType: 'bool',\n    name: '',\n    type: 'bool'\n  }],\n  payable: false,\n  stateMutability: 'nonpayable',\n  type: 'function'\n}, {\n  constant: true,\n  inputs: [{\n    internalType: 'address',\n    name: 'owner',\n    type: 'address'\n  }, {\n    internalType: 'address',\n    name: 'spender',\n    type: 'address'\n  }],\n  name: 'allowance',\n  outputs: [{\n    internalType: 'uint256',\n    name: '',\n    type: 'uint256'\n  }],\n  payable: false,\n  stateMutability: 'view',\n  type: 'function'\n}, {\n  constant: false,\n  inputs: [{\n    internalType: 'address',\n    name: 'spender',\n    type: 'address'\n  }, {\n    internalType: 'uint256',\n    name: 'amount',\n    type: 'uint256'\n  }],\n  name: 'approve',\n  outputs: [{\n    internalType: 'bool',\n    name: '',\n    type: 'bool'\n  }],\n  payable: false,\n  stateMutability: 'nonpayable',\n  type: 'function'\n}, {\n  constant: false,\n  inputs: [{\n    internalType: 'address',\n    name: 'sender',\n    type: 'address'\n  }, {\n    internalType: 'address',\n    name: 'recipient',\n    type: 'address'\n  }, {\n    internalType: 'uint256',\n    name: 'amount',\n    type: 'uint256'\n  }],\n  name: 'transferFrom',\n  outputs: [{\n    internalType: 'bool',\n    name: '',\n    type: 'bool'\n  }],\n  payable: false,\n  stateMutability: 'nonpayable',\n  type: 'function'\n}];","map":{"version":3,"sources":["/Users/miczero/ParaAsset/src/basis-cash/ERC20.ts"],"names":["Contract","formatUnits","ERC20","constructor","address","provider","symbol","decimal","contract","ABI","connect","signerOrProvider","estimateGas","totalSupply","balanceOf","account","transfer","recipient","amount","allowance","owner","spender","approve","transferFrom","sender","transferFro","displayedBalanceOf","balance","displayedTotalSupply","supply","Number","toFixed","name","type","anonymous","inputs","indexed","internalType","constant","outputs","payable","stateMutability"],"mappings":"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","sourcesContent":["import { BigNumber, Contract } from 'ethers';\nimport { Signer } from '@ethersproject/abstract-signer';\nimport { Provider } from '@ethersproject/abstract-provider';\nimport { TransactionResponse } from '@ethersproject/providers';\nimport { formatUnits } from 'ethers/lib/utils';\n\nclass ERC20 {\n  private contract: Contract;\n\n  address: string;\n  symbol: string;\n  decimal: number;\n\n  constructor(address: string, provider: Signer | Provider, symbol: string, decimal = 18) {\n    this.contract = new Contract(address, ABI, provider);\n    this.address = address;\n    this.symbol = symbol;\n    this.decimal = decimal;\n  }\n\n  connect(signerOrProvider: Signer | Provider) {\n    this.contract = new Contract(this.address, ABI, signerOrProvider);\n  }\n\n  get estimateGas() {\n    return this.contract.estimateGas;\n  }\n\n  totalSupply(): Promise<BigNumber> {\n    return this.contract.totalSupply();\n  }\n\n  balanceOf(account: string): Promise<BigNumber> {\n    return this.contract.balanceOf(account);\n  }\n\n  transfer(recipient: string, amount: BigNumber): Promise<TransactionResponse> {\n    return this.contract.transfer(recipient, amount);\n  }\n\n  allowance(owner: string, spender: string): Promise<BigNumber> {\n    return this.contract.allowance(owner, spender);\n  }\n\n  approve(spender: string, amount: BigNumber): Promise<TransactionResponse> {\n    return this.contract.approve(spender, amount);\n  }\n\n  transferFrom(\n    sender: string,\n    recipient: string,\n    amount: BigNumber,\n  ): Promise<TransactionResponse> {\n    return this.contract.transferFro (sender, recipient, amount);\n  }\n\n  async displayedBalanceOf(account: string): Promise<string> {\n    const balance = await this.balanceOf(account);\n    return formatUnits(balance, this.decimal);\n  }\n\n  async displayedTotalSupply(): Promise<string> {\n    const supply = await this.totalSupply();\n    return Number(formatUnits(supply, this.decimal)).toFixed(0);\n  }}\n\nexport default ERC20;\n\nconst ABI = [\n  {\n    name: 'Approval',\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      { indexed: true, internalType: 'address', name: 'owner', type: 'address' },\n      { indexed: true, internalType: 'address', name: 'spender', type: 'address' },\n      { indexed: false, internalType: 'uint256', name: 'value', type: 'uint256' },\n    ],\n  },\n  {\n    anonymous: false,\n    inputs: [\n      { indexed: true, internalType: 'address', name: 'from', type: 'address' },\n      { indexed: true, internalType: 'address', name: 'to', type: 'address' },\n      { indexed: false, internalType: 'uint256', name: 'value', type: 'uint256' },\n    ],\n    name: 'Transfer',\n    type: 'event',\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'totalSupply',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [{ internalType: 'address', name: 'account', type: 'address' }],\n    name: 'balanceOf',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    constant: false,\n    inputs: [\n      { internalType: 'address', name: 'recipient', type: 'address' },\n      { internalType: 'uint256', name: 'amount', type: 'uint256' },\n    ],\n    name: 'transfer',\n    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [\n      { internalType: 'address', name: 'owner', type: 'address' },\n      { internalType: 'address', name: 'spender', type: 'address' },\n    ],\n    name: 'allowance',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    constant: false,\n    inputs: [\n      { internalType: 'address', name: 'spender', type: 'address' },\n      { internalType: 'uint256', name: 'amount', type: 'uint256' },\n    ],\n    name: 'approve',\n    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    constant: false,\n    inputs: [\n      { internalType: 'address', name: 'sender', type: 'address' },\n      { internalType: 'address', name: 'recipient', type: 'address' },\n      { internalType: 'uint256', name: 'amount', type: 'uint256' },\n    ],\n    name: 'transferFrom',\n    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n];\n"]},"metadata":{},"sourceType":"module"}