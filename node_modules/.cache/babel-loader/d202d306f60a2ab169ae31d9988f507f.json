{"ast":null,"code":"var _jsxFileName = \"/Users/miczero/ParaAsset/src/views/Bank/components/Stake.tsx\";\n//@ts-nocheck\nimport React from 'react';\nimport styled from 'styled-components';\nimport Button from '../../../components/Button';\nimport Card from '../../../components/Card';\nimport CardContent from '../../../components/CardContent';\nimport CardIcon from '../../../components/CardIcon';\nimport { AddIcon, RemoveIcon } from '../../../components/icons';\nimport IconButton from '../../../components/IconButton';\nimport Label from '../../../components/Label';\nimport Value from '../../../components/Value';\nimport { useTranslation } from 'react-i18next';\nimport useApprove, { ApprovalState } from '../../../hooks/useApprove';\nimport useModal from '../../../hooks/useModal';\nimport useStake from '../../../hooks/useStake';\nimport useStakedBalance from '../../../hooks/useStakedBalance';\nimport useTokenBalance from '../../../hooks/useTokenBalance';\nimport useWithdraw from '../../../hooks/useWithdraw';\nimport { getDisplayBalance } from '../../../utils/formatBalance';\nimport DepositModal from './DepositModal';\nimport WithdrawModal from './WithdrawModal';\nimport TokenSymbol from '../../../components/TokenSymbol';\n\nconst Stake = ({\n  bank\n}) => {\n  const [approveStatus, approve] = useApprove(bank.depositToken, bank.address);\n  const {\n    t\n  } = useTranslation(); // TODO: reactive update of token balance\n\n  const tokenBalance = useTokenBalance(bank.depositToken);\n  const stakedBalance = useStakedBalance(bank.contract);\n  const {\n    onStake\n  } = useStake(bank);\n  const {\n    onWithdraw\n  } = useWithdraw(bank);\n  const [isOpen, onPresentDeposit, onDismissDeposit] = useModal();\n  const [isOpen1, onPresentWithdraw, onDismissWithdraw] = useModal();\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(StyledCardContentInner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(StyledCardHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TokenSymbol, {\n    symbol: bank.depositToken.symbol,\n    size: 54,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Value, {\n    value: getDisplayBalance(stakedBalance, bank.depositToken.decimal),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Label, {\n    text: t('ydy', {\n      label: bank.depositTokenName\n    }),\n    color: \"#bdbdbd\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(StyledCardActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, bank.depositToken.symbol !== 'BNB' && approveStatus !== ApprovalState.APPROVED ? /*#__PURE__*/React.createElement(Button, {\n    disabled: approveStatus === ApprovalState.PENDING || approveStatus === ApprovalState.UNKNOWN,\n    onClick: approve,\n    text: `${t('pizhun')} ${bank.depositTokenName}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(IconButton, {\n    onClick: onPresentWithdraw,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(RemoveIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(StyledActionSpacer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(IconButton, {\n    disabled: bank.finished,\n    onClick: () => bank.finished ? null : onPresentDeposit(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(AddIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 21\n    }\n  }))))))), /*#__PURE__*/React.createElement(DepositModal, {\n    isOpen: isOpen,\n    onDismiss: onDismissDeposit,\n    max: tokenBalance,\n    decimals: bank.depositToken.decimal,\n    staked: getDisplayBalance(stakedBalance, bank.depositToken.decimal),\n    onConfirm: amount => {\n      onStake(amount);\n      onDismissDeposit();\n    },\n    tokenName: bank.depositTokenName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(WithdrawModal, {\n    isOpen: isOpen1,\n    onDismiss: onDismissWithdraw,\n    max: stakedBalance,\n    decimals: bank.depositToken.decimal,\n    onConfirm: amount => {\n      onWithdraw(amount);\n      onDismissWithdraw();\n    },\n    tokenName: bank.depositTokenName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst StyledCardHeader = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n`;\nconst StyledCardActions = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: ${props => props.theme.spacing[6]}px;\n  width: 100%;\n`;\nconst StyledActionSpacer = styled.div`\n  height: ${props => props.theme.spacing[4]}px;\n  width: ${props => props.theme.spacing[4]}px;\n`;\nconst StyledCardContentInner = styled.div`\n  align-items: center;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: space-between;\n`;\nexport default Stake;","map":{"version":3,"sources":["/Users/miczero/ParaAsset/src/views/Bank/components/Stake.tsx"],"names":["React","styled","Button","Card","CardContent","CardIcon","AddIcon","RemoveIcon","IconButton","Label","Value","useTranslation","useApprove","ApprovalState","useModal","useStake","useStakedBalance","useTokenBalance","useWithdraw","getDisplayBalance","DepositModal","WithdrawModal","TokenSymbol","Stake","bank","approveStatus","approve","depositToken","address","t","tokenBalance","stakedBalance","contract","onStake","onWithdraw","isOpen","onPresentDeposit","onDismissDeposit","isOpen1","onPresentWithdraw","onDismissWithdraw","symbol","decimal","label","depositTokenName","APPROVED","PENDING","UNKNOWN","finished","amount","StyledCardHeader","div","StyledCardActions","props","theme","spacing","StyledActionSpacer","StyledCardContentInner"],"mappings":"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","sourcesContent":["//@ts-nocheck\nimport React from 'react';\nimport styled from 'styled-components';\n\nimport Button from '../../../components/Button';\nimport Card from '../../../components/Card';\nimport CardContent from '../../../components/CardContent';\nimport CardIcon from '../../../components/CardIcon';\nimport { AddIcon, RemoveIcon } from '../../../components/icons';\nimport IconButton from '../../../components/IconButton';\nimport Label from '../../../components/Label';\nimport Value from '../../../components/Value';\nimport { useTranslation } from 'react-i18next';\nimport useApprove, { ApprovalState } from '../../../hooks/useApprove';\nimport useModal from '../../../hooks/useModal';\nimport useStake from '../../../hooks/useStake';\nimport useStakedBalance from '../../../hooks/useStakedBalance';\nimport useTokenBalance from '../../../hooks/useTokenBalance';\nimport useWithdraw from '../../../hooks/useWithdraw';\n\nimport { getDisplayBalance } from '../../../utils/formatBalance';\n\nimport DepositModal from './DepositModal';\nimport WithdrawModal from './WithdrawModal';\nimport TokenSymbol from '../../../components/TokenSymbol';\nimport { Bank } from '../../../basis-cash';\n\ninterface StakeProps {\n  bank: Bank;\n}\n\nconst Stake: React.FC<StakeProps> = ({ bank }) => {\n  const [approveStatus, approve] = useApprove(bank.depositToken, bank.address);\n  const { t } = useTranslation();\n  // TODO: reactive update of token balance\n  const tokenBalance = useTokenBalance(bank.depositToken);\n  const stakedBalance = useStakedBalance(bank.contract);\n\n  const { onStake } = useStake(bank);\n  const { onWithdraw } = useWithdraw(bank);\n\n  const [isOpen, onPresentDeposit, onDismissDeposit] = useModal();\n\n  const [isOpen1, onPresentWithdraw, onDismissWithdraw] = useModal();\n\n  return (\n    <>\n      <Card>\n        <CardContent>\n          <StyledCardContentInner>\n            <StyledCardHeader>\n              <CardIcon>\n                <TokenSymbol symbol={bank.depositToken.symbol} size={54} />\n              </CardIcon>\n              <Value value={getDisplayBalance(stakedBalance, bank.depositToken.decimal)} />\n              <Label\n                text={t('ydy', {\n                  label: bank.depositTokenName,\n                })}\n                color=\"#bdbdbd\"\n              />\n            </StyledCardHeader>\n            <StyledCardActions>\n              {bank.depositToken.symbol !== 'BNB' &&\n              approveStatus !== ApprovalState.APPROVED ? (\n                <Button\n                  disabled={\n                    approveStatus === ApprovalState.PENDING ||\n                    approveStatus === ApprovalState.UNKNOWN\n                  }\n                  onClick={approve}\n                  text={`${t('pizhun')} ${bank.depositTokenName}`}\n                />\n              ) : (\n                <>\n                  <IconButton onClick={onPresentWithdraw}>\n                    <RemoveIcon />\n                  </IconButton>\n                  <StyledActionSpacer />\n                  <IconButton\n                    disabled={bank.finished}\n                    onClick={() => (bank.finished ? null : onPresentDeposit())}\n                  >\n                    <AddIcon />\n                  </IconButton>\n                </>\n              )}\n            </StyledCardActions>\n          </StyledCardContentInner>\n        </CardContent>\n      </Card>\n      <DepositModal\n        isOpen={isOpen}\n        onDismiss={onDismissDeposit}\n        max={tokenBalance}\n        decimals={bank.depositToken.decimal}\n        staked={getDisplayBalance(stakedBalance, bank.depositToken.decimal)}\n        onConfirm={(amount) => {\n          onStake(amount);\n          onDismissDeposit();\n        }}\n        tokenName={bank.depositTokenName}\n      />\n      <WithdrawModal\n        isOpen={isOpen1}\n        onDismiss={onDismissWithdraw}\n        max={stakedBalance}\n        decimals={bank.depositToken.decimal}\n        onConfirm={(amount) => {\n          onWithdraw(amount);\n          onDismissWithdraw();\n        }}\n        tokenName={bank.depositTokenName}\n      />\n    </>\n  );\n};\n\nconst StyledCardHeader = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n`;\nconst StyledCardActions = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: ${(props) => props.theme.spacing[6]}px;\n  width: 100%;\n`;\n\nconst StyledActionSpacer = styled.div`\n  height: ${(props) => props.theme.spacing[4]}px;\n  width: ${(props) => props.theme.spacing[4]}px;\n`;\n\nconst StyledCardContentInner = styled.div`\n  align-items: center;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: space-between;\n`;\n\nexport default Stake;\n"]},"metadata":{},"sourceType":"module"}