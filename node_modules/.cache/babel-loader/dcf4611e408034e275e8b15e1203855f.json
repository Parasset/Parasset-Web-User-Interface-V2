{"ast":null,"code":"import { ChainId } from '@uniswap/sdk';\nconst configurations = {\n  development: {\n    chainId: 97,\n    etherscanUrl: 'https://etherscan.io',\n    defaultProvider: 'https://data-seed-prebsc-1-s1.binance.org:8545/',\n    deployments: require('./basis-cash/deployments/deployments.mainnet.json'),\n    externalTokens: {\n      DAI: ['0xc27AaDec435E161f45833CB72c1d22813f4374BB', 18] // ETH: ['0x33680C72C40e0dddd11Fbf7c48517444aa9BDA82', 18],\n      // USDT: ['0xE797C574973Cbb4FC9aF15eC0163bBc5B2C684c0', 18],\n      // OXY: ['0xCA89EEA9FABC8Aa275E15659d40A6490c6f41a40', 18],\n      // BNB: ['0xCA89EEA9FABC8Aa275E15659d40A6490c6f41a40', 18],\n      // 'GAC_USDT-UNI-LPv2': ['0xe026260894966154d419f8ea98bafde646580bed', 18],\n      // 'GAS_USDT-UNI-LPv2': ['0x98cbd62d948e2eff3489fdc850357f0916e21a46', 18],\n\n    },\n    baseLaunchDate: new Date('2020-11-26T00:00:00Z'),\n    bondLaunchesAt: new Date('2020-12-03T15:00:00Z'),\n    boardroomLaunchesAt: new Date('2020-12-11T00:00:00Z'),\n    refreshInterval: 1000,\n    gasLimitMultiplier: 1.1\n  },\n  production: {\n    chainId: ChainId.MAINNET,\n    etherscanUrl: 'https://etherscan.io',\n    defaultProvider: 'https://mainnet.infura.io/v3/06ecf536272c43c78adfba29b908a68d',\n    deployments: require('./basis-cash/deployments/deployments.mainnet.json'),\n    externalTokens: {\n      DAI: ['0x6B175474E89094C44Da98b954EedeAC495271d0F', 18]\n    },\n    baseLaunchDate: new Date('2020-11-29T23:00:00Z'),\n    bondLaunchesAt: new Date('2020-12-05T00:00:00Z'),\n    boardroomLaunchesAt: new Date('2020-12-11T00:00:00Z'),\n    refreshInterval: 30000,\n    gasLimitMultiplier: 1.7\n  }\n};\nexport const bankDefinitions = {\n  GACBNBPool: {\n    name: 'Earn GAC by BNB',\n    contract: 'GACBNBPool',\n    depositTokenName: 'BNB',\n    earnTokenName: 'GAC',\n    finished: false,\n    sort: 3\n  },\n  GACDAIPool: {\n    name: 'Earn GAC by DAI',\n    contract: 'GACDAIPool',\n    depositTokenName: 'DAI',\n    earnTokenName: 'GAC',\n    finished: false,\n    sort: 4\n  },\n  GACETHPool: {\n    name: 'Earn GAC by ETH',\n    contract: 'GACETHPool',\n    depositTokenName: 'ETH',\n    earnTokenName: 'GAC',\n    finished: false,\n    sort: 5\n  },\n  GACOXYPool: {\n    name: 'Earn GAC by OXY',\n    contract: 'GACOXYPool',\n    depositTokenName: 'OXY',\n    earnTokenName: 'GAC',\n    finished: false,\n    sort: 6\n  },\n  GACUSDTPool: {\n    name: 'Earn GAC by USDT',\n    contract: 'GACUSDTPool',\n    depositTokenName: 'USDT',\n    earnTokenName: 'GAC',\n    finished: false,\n    sort: 7\n  },\n  USDTGACLPTokenSharePool: {\n    name: 'Earn GAS by GAC-USDT-LP',\n    contract: 'USDTGACLPTokenSharePool',\n    depositTokenName: 'GAC_USDT-UNI-LPv2',\n    earnTokenName: 'GAS',\n    finished: false,\n    sort: 1\n  },\n  USDTGASLPTokenSharePool: {\n    name: 'Earn GAS by GAS-USDT-LP',\n    contract: 'USDTGASLPTokenSharePool',\n    depositTokenName: 'GAS_USDT-UNI-LPv2',\n    earnTokenName: 'GAS',\n    finished: false,\n    sort: 2\n  }\n};\nexport const stakeLimit = {\n  OXY: 5000,\n  BNB: 500,\n  ETH: 50,\n  USDT: 5000,\n  DAI: 5000,\n  'GAC_USDT-UNI-LPv2': 10000000000,\n  'GAS_USDT-UNI-LPv2': 10000000000\n};\nexport default configurations[process.env.NODE_ENV || 'development'];","map":{"version":3,"sources":["/Users/miczero/ParaAsset/src/config.ts"],"names":["ChainId","configurations","development","chainId","etherscanUrl","defaultProvider","deployments","require","externalTokens","DAI","baseLaunchDate","Date","bondLaunchesAt","boardroomLaunchesAt","refreshInterval","gasLimitMultiplier","production","MAINNET","bankDefinitions","GACBNBPool","name","contract","depositTokenName","earnTokenName","finished","sort","GACDAIPool","GACETHPool","GACOXYPool","GACUSDTPool","USDTGACLPTokenSharePool","USDTGASLPTokenSharePool","stakeLimit","OXY","BNB","ETH","USDT","process","env","NODE_ENV"],"mappings":"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","sourcesContent":["import { ChainId } from '@uniswap/sdk';\nimport { Configuration } from './basis-cash/config';\nimport { BankInfo } from './basis-cash';\nimport { formatUnits } from 'ethers/lib/utils';\nimport { BigNumber } from 'ethers';\n\nconst configurations: { [env: string]: Configuration } = {\n  development: {\n    chainId: 97,\n    etherscanUrl: 'https://etherscan.io',\n    defaultProvider: 'https://data-seed-prebsc-1-s1.binance.org:8545/',\n    deployments: require('./basis-cash/deployments/deployments.mainnet.json'),\n    externalTokens: {\n      DAI: ['0xc27AaDec435E161f45833CB72c1d22813f4374BB', 18],\n      // ETH: ['0x33680C72C40e0dddd11Fbf7c48517444aa9BDA82', 18],\n      // USDT: ['0xE797C574973Cbb4FC9aF15eC0163bBc5B2C684c0', 18],\n      // OXY: ['0xCA89EEA9FABC8Aa275E15659d40A6490c6f41a40', 18],\n      // BNB: ['0xCA89EEA9FABC8Aa275E15659d40A6490c6f41a40', 18],\n      // 'GAC_USDT-UNI-LPv2': ['0xe026260894966154d419f8ea98bafde646580bed', 18],\n      // 'GAS_USDT-UNI-LPv2': ['0x98cbd62d948e2eff3489fdc850357f0916e21a46', 18],\n    },\n    baseLaunchDate: new Date('2020-11-26T00:00:00Z'),\n    bondLaunchesAt: new Date('2020-12-03T15:00:00Z'),\n    boardroomLaunchesAt: new Date('2020-12-11T00:00:00Z'),\n    refreshInterval: 1000,\n    gasLimitMultiplier: 1.1,\n  },\n  production: {\n    chainId: ChainId.MAINNET,\n    etherscanUrl: 'https://etherscan.io',\n    defaultProvider: 'https://mainnet.infura.io/v3/06ecf536272c43c78adfba29b908a68d',\n    deployments: require('./basis-cash/deployments/deployments.mainnet.json'),\n    externalTokens: {\n      DAI: ['0x6B175474E89094C44Da98b954EedeAC495271d0F', 18],\n    },\n    baseLaunchDate: new Date('2020-11-29T23:00:00Z'),\n    bondLaunchesAt: new Date('2020-12-05T00:00:00Z'),\n    boardroomLaunchesAt: new Date('2020-12-11T00:00:00Z'),\n    refreshInterval: 30000,\n    gasLimitMultiplier: 1.7,\n  },\n};\n\nexport const bankDefinitions: { [contractName: string]: BankInfo } = {\n  GACBNBPool: {\n    name: 'Earn GAC by BNB',\n    contract: 'GACBNBPool',\n    depositTokenName: 'BNB',\n    earnTokenName: 'GAC',\n    finished: false,\n    sort: 3,\n  },\n  GACDAIPool: {\n    name: 'Earn GAC by DAI',\n    contract: 'GACDAIPool',\n    depositTokenName: 'DAI',\n    earnTokenName: 'GAC',\n    finished: false,\n    sort: 4,\n  },\n  GACETHPool: {\n    name: 'Earn GAC by ETH',\n    contract: 'GACETHPool',\n    depositTokenName: 'ETH',\n    earnTokenName: 'GAC',\n    finished: false,\n    sort: 5,\n  },\n  GACOXYPool: {\n    name: 'Earn GAC by OXY',\n    contract: 'GACOXYPool',\n    depositTokenName: 'OXY',\n    earnTokenName: 'GAC',\n    finished: false,\n    sort: 6,\n  },\n  GACUSDTPool: {\n    name: 'Earn GAC by USDT',\n    contract: 'GACUSDTPool',\n    depositTokenName: 'USDT',\n    earnTokenName: 'GAC',\n    finished: false,\n    sort: 7,\n  },\n  USDTGACLPTokenSharePool: {\n    name: 'Earn GAS by GAC-USDT-LP',\n    contract: 'USDTGACLPTokenSharePool',\n    depositTokenName: 'GAC_USDT-UNI-LPv2',\n    earnTokenName: 'GAS',\n    finished: false,\n    sort: 1,\n  },\n  USDTGASLPTokenSharePool: {\n    name: 'Earn GAS by GAS-USDT-LP',\n    contract: 'USDTGASLPTokenSharePool',\n    depositTokenName: 'GAS_USDT-UNI-LPv2',\n    earnTokenName: 'GAS',\n    finished: false,\n    sort: 2,\n  },\n};\n\nexport const stakeLimit = {\n  OXY: 5000,\n  BNB: 500,\n  ETH: 50,\n  USDT: 5000,\n  DAI: 5000,\n  'GAC_USDT-UNI-LPv2': 10000000000,\n  'GAS_USDT-UNI-LPv2': 10000000000,\n};\n\nexport default configurations[process.env.NODE_ENV || 'development'];\n"]},"metadata":{},"sourceType":"module"}