{"ast":null,"code":"var _jsxFileName = \"/Users/miczero/ParaAsset/src/components/Popups/TransactionPopup.tsx\";\nimport React, { useContext } from 'react';\nimport { AlertCircle, CheckCircle } from 'react-feather';\nimport styled, { ThemeContext } from 'styled-components';\nimport { AutoColumn } from '../Column';\nimport { AutoRow } from '../Row';\nimport { useWallet } from 'use-wallet';\nimport config from '../../config';\nimport { useTranslation } from 'react-i18next';\nconst RowNoFlex = styled(AutoRow)`\n  flex-wrap: nowrap;\n`;\nexport default function TransactionPopup({\n  hash,\n  success,\n  summary\n}) {\n  const {\n    chainId\n  } = useWallet();\n  const theme = useContext(ThemeContext);\n  const {\n    t\n  } = useTranslation();\n  return /*#__PURE__*/React.createElement(RowNoFlex, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      paddingRight: 16\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, success ? /*#__PURE__*/React.createElement(CheckCircle, {\n    color: theme.color.teal[200],\n    size: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }\n  }) : /*#__PURE__*/React.createElement(AlertCircle, {\n    color: \"#FF6871\",\n    size: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(AutoColumn, {\n    gap: \"8px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(StyledPopupDesc, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, summary !== null && summary !== void 0 ? summary : 'Hash: ' + hash.slice(0, 8) + '...' + hash.slice(58, 65)), chainId && /*#__PURE__*/React.createElement(StyledLink, {\n    href: `${config.etherscanUrl}/tx/${hash}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }, t('zesck'))));\n}\nconst StyledPopupDesc = styled.span`\n  font-weight: 500;\n  color: ${props => props.theme.color.grey[300]};\n`;\nconst StyledLink = styled.a`\n  color: ${props => props.theme.color.grey[500]};\n`;","map":{"version":3,"sources":["/Users/miczero/ParaAsset/src/components/Popups/TransactionPopup.tsx"],"names":["React","useContext","AlertCircle","CheckCircle","styled","ThemeContext","AutoColumn","AutoRow","useWallet","config","useTranslation","RowNoFlex","TransactionPopup","hash","success","summary","chainId","theme","t","paddingRight","color","teal","slice","etherscanUrl","StyledPopupDesc","span","props","grey","StyledLink","a"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,eAAzC;AACA,OAAOC,MAAP,IAAiBC,YAAjB,QAAqC,mBAArC;AACA,SAASC,UAAT,QAA2B,WAA3B;AACA,SAASC,OAAT,QAAwB,QAAxB;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,MAAMC,SAAS,GAAGP,MAAM,CAACG,OAAD,CAAU;;CAAlC;AAIA,eAAe,SAASK,gBAAT,CAA0B;AACvCC,EAAAA,IADuC;AAEvCC,EAAAA,OAFuC;AAGvCC,EAAAA;AAHuC,CAA1B,EAQZ;AACD,QAAM;AAAEC,IAAAA;AAAF,MAAcR,SAAS,EAA7B;AACA,QAAMS,KAAK,GAAGhB,UAAU,CAACI,YAAD,CAAxB;AACA,QAAM;AAAEa,IAAAA;AAAF,MAAQR,cAAc,EAA5B;AACA,sBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,KAAK,EAAE;AAAES,MAAAA,YAAY,EAAE;AAAhB,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,OAAO,gBACN,oBAAC,WAAD;AAAa,IAAA,KAAK,EAAEG,KAAK,CAACG,KAAN,CAAYC,IAAZ,CAAiB,GAAjB,CAApB;AAA2C,IAAA,IAAI,EAAE,EAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADM,gBAGN,oBAAC,WAAD;AAAa,IAAA,KAAK,EAAC,SAAnB;AAA6B,IAAA,IAAI,EAAE,EAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADF,eAQE,oBAAC,UAAD;AAAY,IAAA,GAAG,EAAC,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,OADH,aACGA,OADH,cACGA,OADH,GACc,WAAWF,IAAI,CAACS,KAAL,CAAW,CAAX,EAAc,CAAd,CAAX,GAA8B,KAA9B,GAAsCT,IAAI,CAACS,KAAL,CAAW,EAAX,EAAe,EAAf,CADpD,CADF,EAIGN,OAAO,iBACN,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAG,GAAEP,MAAM,CAACc,YAAa,OAAMV,IAAK,EAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwDK,CAAC,CAAC,OAAD,CAAzD,CALJ,CARF,CADF;AAmBD;AAED,MAAMM,eAAe,GAAGpB,MAAM,CAACqB,IAAK;;WAExBC,KAAD,IAAWA,KAAK,CAACT,KAAN,CAAYG,KAAZ,CAAkBO,IAAlB,CAAuB,GAAvB,CAA4B;CAFlD;AAKA,MAAMC,UAAU,GAAGxB,MAAM,CAACyB,CAAE;WAChBH,KAAD,IAAWA,KAAK,CAACT,KAAN,CAAYG,KAAZ,CAAkBO,IAAlB,CAAuB,GAAvB,CAA4B;CADlD","sourcesContent":["import React, { useContext } from 'react';\nimport { AlertCircle, CheckCircle } from 'react-feather';\nimport styled, { ThemeContext } from 'styled-components';\nimport { AutoColumn } from '../Column';\nimport { AutoRow } from '../Row';\nimport { useWallet } from 'use-wallet';\nimport config from '../../config';\nimport { useTranslation } from 'react-i18next';\nconst RowNoFlex = styled(AutoRow)`\n  flex-wrap: nowrap;\n`;\n\nexport default function TransactionPopup({\n  hash,\n  success,\n  summary,\n}: {\n  hash: string;\n  success?: boolean;\n  summary?: string;\n}) {\n  const { chainId } = useWallet();\n  const theme = useContext(ThemeContext);\n  const { t } = useTranslation();\n  return (\n    <RowNoFlex>\n      <div style={{ paddingRight: 16 }}>\n        {success ? (\n          <CheckCircle color={theme.color.teal[200]} size={24} />\n        ) : (\n          <AlertCircle color=\"#FF6871\" size={24} />\n        )}\n      </div>\n      <AutoColumn gap=\"8px\">\n        <StyledPopupDesc>\n          {summary ?? 'Hash: ' + hash.slice(0, 8) + '...' + hash.slice(58, 65)}\n        </StyledPopupDesc>\n        {chainId && (\n          <StyledLink href={`${config.etherscanUrl}/tx/${hash}`}>{t('zesck')}</StyledLink>\n        )}\n      </AutoColumn>\n    </RowNoFlex>\n  );\n}\n\nconst StyledPopupDesc = styled.span`\n  font-weight: 500;\n  color: ${(props) => props.theme.color.grey[300]};\n`;\n\nconst StyledLink = styled.a`\n  color: ${(props) => props.theme.color.grey[500]};\n`;\n"]},"metadata":{},"sourceType":"module"}