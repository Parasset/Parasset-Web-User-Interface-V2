{"ast":null,"code":"//@ts-nocheck\nimport { useCallback } from \"react\";\nimport { toggleStatusModal, toggleStatus, updateTransactionHash } from \"./actions\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useWallet } from \"use-wallet\";\nexport function useBlockNumber() {\n  const {\n    chainId\n  } = useWallet();\n  return useSelector(state => state.application.blockNumber[chainId !== null && chainId !== void 0 ? chainId : -1]);\n}\nexport function useWalletModalOpen() {\n  return useSelector(state => state.application.walletModalOpen);\n}\nexport function useStatusModalToggle() {\n  const dispatch = useDispatch();\n  return useCallback(statusModalOpen => dispatch(toggleStatusModal({\n    statusModalOpen\n  })), [dispatch]);\n}\nexport function useWaitModal() {\n  return useSelector(state => {\n    return state.application.statusModalOpen;\n  });\n}\nexport function useUpdateTransactionHash() {\n  const dispatch = useDispatch();\n  return useCallback(transactionHash => dispatch(updateTransactionHash({\n    transactionHash\n  })), [dispatch]);\n}\nexport function useTransactionHash() {\n  return useSelector(state => {\n    return state.application.transactionHash;\n  });\n}\nexport function useStatusToggle() {\n  const dispatch = useDispatch();\n  return useCallback(status => dispatch(toggleStatus({\n    status\n  })), [dispatch]);\n}\nexport function useStatus() {\n  return useSelector(state => {\n    return state.application.status;\n  });\n}","map":{"version":3,"sources":["/Users/miczero/ParaAsset/src/state/application/hooks.ts"],"names":["useCallback","toggleStatusModal","toggleStatus","updateTransactionHash","useSelector","useDispatch","useWallet","useBlockNumber","chainId","state","application","blockNumber","useWalletModalOpen","walletModalOpen","useStatusModalToggle","dispatch","statusModalOpen","useWaitModal","useUpdateTransactionHash","transactionHash","useTransactionHash","useStatusToggle","status","useStatus"],"mappings":"AAAA;AACA,SAASA,WAAT,QAAqC,OAArC;AACA,SAGEC,iBAHF,EAKEC,YALF,EAMEC,qBANF,QAQO,WARP;AASA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,SAASC,SAAT,QAA0B,YAA1B;AAEA,OAAO,SAASC,cAAT,GAA8C;AACnD,QAAM;AAAEC,IAAAA;AAAF,MAAcF,SAAS,EAA7B;AACA,SAAOF,WAAW,CACfK,KAAD,IAAqBA,KAAK,CAACC,WAAN,CAAkBC,WAAlB,CAA8BH,OAA9B,aAA8BA,OAA9B,cAA8BA,OAA9B,GAAyC,CAAC,CAA1C,CADL,CAAlB;AAGD;AAED,OAAO,SAASI,kBAAT,GAAuC;AAC5C,SAAOR,WAAW,CAAEK,KAAD,IAAqBA,KAAK,CAACC,WAAN,CAAkBG,eAAxC,CAAlB;AACD;AAOD,OAAO,SAASC,oBAAT,GAAgC;AACrC,QAAMC,QAAQ,GAAGV,WAAW,EAA5B;AACA,SAAOL,WAAW,CACfgB,eAAD,IAAqBD,QAAQ,CAACd,iBAAiB,CAAC;AAAEe,IAAAA;AAAF,GAAD,CAAlB,CADb,EAEhB,CAACD,QAAD,CAFgB,CAAlB;AAID;AAED,OAAO,SAASE,YAAT,GAAwB;AAC7B,SAAOb,WAAW,CAAEK,KAAD,IAAW;AAC5B,WAAOA,KAAK,CAACC,WAAN,CAAkBM,eAAzB;AACD,GAFiB,CAAlB;AAGD;AAED,OAAO,SAASE,wBAAT,GAAoC;AACzC,QAAMH,QAAQ,GAAGV,WAAW,EAA5B;AACA,SAAOL,WAAW,CACfmB,eAAD,IAAqBJ,QAAQ,CAACZ,qBAAqB,CAAC;AAAEgB,IAAAA;AAAF,GAAD,CAAtB,CADb,EAEhB,CAACJ,QAAD,CAFgB,CAAlB;AAID;AAED,OAAO,SAASK,kBAAT,GAA8B;AACnC,SAAOhB,WAAW,CAAEK,KAAD,IAAW;AAC5B,WAAOA,KAAK,CAACC,WAAN,CAAkBS,eAAzB;AACD,GAFiB,CAAlB;AAGD;AACD,OAAO,SAASE,eAAT,GAA2B;AAChC,QAAMN,QAAQ,GAAGV,WAAW,EAA5B;AACA,SAAOL,WAAW,CAAEsB,MAAD,IAAYP,QAAQ,CAACb,YAAY,CAAC;AAAEoB,IAAAA;AAAF,GAAD,CAAb,CAArB,EAAiD,CACjEP,QADiE,CAAjD,CAAlB;AAGD;AACD,OAAO,SAASQ,SAAT,GAAqB;AAC1B,SAAOnB,WAAW,CAAEK,KAAD,IAAW;AAC5B,WAAOA,KAAK,CAACC,WAAN,CAAkBY,MAAzB;AACD,GAFiB,CAAlB;AAGD","sourcesContent":["//@ts-nocheck\nimport { useCallback, useMemo } from \"react\";\nimport {\n\n\n  toggleStatusModal,\n\n  toggleStatus,\n  updateTransactionHash,\n  toggleSettingsMenu,\n} from \"./actions\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { AppState } from \"../index\";\nimport { useWallet } from \"use-wallet\";\n\nexport function useBlockNumber(): number | undefined {\n  const { chainId } = useWallet();\n  return useSelector(\n    (state: AppState) => state.application.blockNumber[chainId ?? -1]\n  );\n}\n\nexport function useWalletModalOpen(): boolean {\n  return useSelector((state: AppState) => state.application.walletModalOpen);\n}\n\n\n\n\n\n\nexport function useStatusModalToggle() {\n  const dispatch = useDispatch();\n  return useCallback(\n    (statusModalOpen) => dispatch(toggleStatusModal({ statusModalOpen })),\n    [dispatch]\n  );\n}\n\nexport function useWaitModal() {\n  return useSelector((state) => {\n    return state.application.statusModalOpen;\n  });\n}\n\nexport function useUpdateTransactionHash() {\n  const dispatch = useDispatch();\n  return useCallback(\n    (transactionHash) => dispatch(updateTransactionHash({ transactionHash })),\n    [dispatch]\n  );\n}\n\nexport function useTransactionHash() {\n  return useSelector((state) => {\n    return state.application.transactionHash;\n  });\n}\nexport function useStatusToggle() {\n  const dispatch = useDispatch();\n  return useCallback((status) => dispatch(toggleStatus({ status })), [\n    dispatch,\n  ]);\n}\nexport function useStatus() {\n  return useSelector((state) => {\n    return state.application.status;\n  });\n}\n"]},"metadata":{},"sourceType":"module"}